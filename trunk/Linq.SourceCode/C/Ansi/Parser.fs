// Implementation file for parser generated by fsyacc
module internal System.Linq.SourceCode.C.Ansi.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "C\Ansi\Parser.fsy"

open System.Collections.Generic

type program = System.Collections.Generic.IList<DeclarationBase>

let internal CreateListWithElement (element : 'T) = 
    let list = new System.Collections.Generic.List<'T>()
    list.Add(element)
    (list :> System.Collections.Generic.IList<'T>)
    
let internal CreateListWithElements (elements : 'T seq) = 
    let list = new System.Collections.Generic.List<'T>()
    for element in elements do
        list.Add(element)
    (list :> System.Collections.Generic.IList<'T>)

let internal AddElement (list : #System.Collections.Generic.IList<'T>, element : 'T) =
   list.Add(element)
   list
    

# 28 "C\Ansi\Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | CASE
  | DEFAULT
  | IF
  | ELSE
  | SWITCH
  | WHILE
  | DO
  | FOR
  | GOTO
  | CONTINUE
  | BREAK
  | RETURN
  | STRUCT
  | UNION
  | ENUM
  | CHAR
  | SHORT
  | INT
  | LONG
  | SIGNED
  | UNSIGNED
  | FLOAT
  | DOUBLE
  | CONST
  | VOLATILE
  | VOID
  | SIZEOF
  | TYPEDEF
  | EXTERN
  | STATIC
  | AUTO
  | REGISTER
  | ASSIGN
  | LEFT_ASSIGN
  | RIGHT_ASSIGN
  | XOR_ASSIGN
  | OR_ASSIGN
  | AND_ASSIGN
  | MUL_ASSIGN
  | DIV_ASSIGN
  | MOD_ASSIGN
  | SUB_ASSIGN
  | ADD_ASSIGN
  | LOGICAL_AND_OP
  | LOGICAL_OR_OP
  | LOGICAL_NOT_OP
  | ELLIPSIS
  | DOT
  | COMMA
  | COLON
  | SEMICOLON
  | L_ROUND_BRACKET
  | R_ROUND_BRACKET
  | L_CURRLY_BRACKET
  | R_CURRLY_BRACKET
  | L_SQUARE_BRACKET
  | R_SQUARE_BRACKET
  | LEFT_OP
  | RIGHT_OP
  | LT_OP
  | GT_OP
  | LE_OP
  | GE_OP
  | EQ_OP
  | NE_OP
  | ADD_OP
  | SUB_OP
  | MUL_OP
  | DIV_OP
  | MOD_OP
  | AND_OP
  | OR_OP
  | NOT_OP
  | XOR_OP
  | TETRNARY_OP
  | INC_OP
  | DEC_OP
  | PTR_OP
  | STRING_LITERAL of (string)
  | CONSTANT of (string)
  | IDENTIFIER of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_IF
    | TOKEN_ELSE
    | TOKEN_SWITCH
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_FOR
    | TOKEN_GOTO
    | TOKEN_CONTINUE
    | TOKEN_BREAK
    | TOKEN_RETURN
    | TOKEN_STRUCT
    | TOKEN_UNION
    | TOKEN_ENUM
    | TOKEN_CHAR
    | TOKEN_SHORT
    | TOKEN_INT
    | TOKEN_LONG
    | TOKEN_SIGNED
    | TOKEN_UNSIGNED
    | TOKEN_FLOAT
    | TOKEN_DOUBLE
    | TOKEN_CONST
    | TOKEN_VOLATILE
    | TOKEN_VOID
    | TOKEN_SIZEOF
    | TOKEN_TYPEDEF
    | TOKEN_EXTERN
    | TOKEN_STATIC
    | TOKEN_AUTO
    | TOKEN_REGISTER
    | TOKEN_ASSIGN
    | TOKEN_LEFT_ASSIGN
    | TOKEN_RIGHT_ASSIGN
    | TOKEN_XOR_ASSIGN
    | TOKEN_OR_ASSIGN
    | TOKEN_AND_ASSIGN
    | TOKEN_MUL_ASSIGN
    | TOKEN_DIV_ASSIGN
    | TOKEN_MOD_ASSIGN
    | TOKEN_SUB_ASSIGN
    | TOKEN_ADD_ASSIGN
    | TOKEN_LOGICAL_AND_OP
    | TOKEN_LOGICAL_OR_OP
    | TOKEN_LOGICAL_NOT_OP
    | TOKEN_ELLIPSIS
    | TOKEN_DOT
    | TOKEN_COMMA
    | TOKEN_COLON
    | TOKEN_SEMICOLON
    | TOKEN_L_ROUND_BRACKET
    | TOKEN_R_ROUND_BRACKET
    | TOKEN_L_CURRLY_BRACKET
    | TOKEN_R_CURRLY_BRACKET
    | TOKEN_L_SQUARE_BRACKET
    | TOKEN_R_SQUARE_BRACKET
    | TOKEN_LEFT_OP
    | TOKEN_RIGHT_OP
    | TOKEN_LT_OP
    | TOKEN_GT_OP
    | TOKEN_LE_OP
    | TOKEN_GE_OP
    | TOKEN_EQ_OP
    | TOKEN_NE_OP
    | TOKEN_ADD_OP
    | TOKEN_SUB_OP
    | TOKEN_MUL_OP
    | TOKEN_DIV_OP
    | TOKEN_MOD_OP
    | TOKEN_AND_OP
    | TOKEN_OR_OP
    | TOKEN_NOT_OP
    | TOKEN_XOR_OP
    | TOKEN_TETRNARY_OP
    | TOKEN_INC_OP
    | TOKEN_DEC_OP
    | TOKEN_PTR_OP
    | TOKEN_STRING_LITERAL
    | TOKEN_CONSTANT
    | TOKEN_IDENTIFIER
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startdeclaration
    | NONTERM__startStatement
    | NONTERM__startexpression
    | NONTERM__starttranslation_unit
    | NONTERM_expression
    | NONTERM_assignment_expression
    | NONTERM_assignment_operator
    | NONTERM_conditional_expression
    | NONTERM_logical_or_expression
    | NONTERM_logical_and_expression
    | NONTERM_inclusive_or_expression
    | NONTERM_exclusive_or_expression
    | NONTERM_and_expression
    | NONTERM_equality_expression
    | NONTERM_relational_expression
    | NONTERM_shift_expression
    | NONTERM_additive_expression
    | NONTERM_multiplicative_expression
    | NONTERM_cast_expression
    | NONTERM_unary_expression
    | NONTERM_unary_operator
    | NONTERM_argument_expression_list
    | NONTERM_postfix_expression
    | NONTERM_primary_expression
    | NONTERM_constant_expression
    | NONTERM_storage_class_Specifier
    | NONTERM_type_Specifier
    | NONTERM_enum_Specifier
    | NONTERM_enumerator_list
    | NONTERM_enumerator
    | NONTERM_struct_or_union_Specifier
    | NONTERM_struct_declaration_list
    | NONTERM_struct_declaration
    | NONTERM_struct_declarator_list
    | NONTERM_struct_declarator
    | NONTERM_type_qualifier
    | NONTERM_struct_or_union
    | NONTERM_declaration
    | NONTERM_declaration_list
    | NONTERM_declaration_Specifiers
    | NONTERM_Specifier_qualifier_list
    | NONTERM_init_declarator_list
    | NONTERM_init_declarator
    | NONTERM_declarator
    | NONTERM_direct_declarator
    | NONTERM_pointer
    | NONTERM_type_qualifier_list
    | NONTERM_Parameter_type_list
    | NONTERM_Parameter_list
    | NONTERM_Parameter_declaration
    | NONTERM_identifier_list
    | NONTERM_type_name
    | NONTERM_abstract_declarator
    | NONTERM_direct_abstract_declarator
    | NONTERM_initializer
    | NONTERM_initializer_list
    | NONTERM_Statement
    | NONTERM_labeled_Statement
    | NONTERM_compound_Statement
    | NONTERM_Statement_list
    | NONTERM_expression_Statement
    | NONTERM_selection_Statement
    | NONTERM_iteration_Statement
    | NONTERM_jump_Statement
    | NONTERM_translation_unit
    | NONTERM_external_declaration
    | NONTERM_function_definition

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | CASE  -> 1 
  | DEFAULT  -> 2 
  | IF  -> 3 
  | ELSE  -> 4 
  | SWITCH  -> 5 
  | WHILE  -> 6 
  | DO  -> 7 
  | FOR  -> 8 
  | GOTO  -> 9 
  | CONTINUE  -> 10 
  | BREAK  -> 11 
  | RETURN  -> 12 
  | STRUCT  -> 13 
  | UNION  -> 14 
  | ENUM  -> 15 
  | CHAR  -> 16 
  | SHORT  -> 17 
  | INT  -> 18 
  | LONG  -> 19 
  | SIGNED  -> 20 
  | UNSIGNED  -> 21 
  | FLOAT  -> 22 
  | DOUBLE  -> 23 
  | CONST  -> 24 
  | VOLATILE  -> 25 
  | VOID  -> 26 
  | SIZEOF  -> 27 
  | TYPEDEF  -> 28 
  | EXTERN  -> 29 
  | STATIC  -> 30 
  | AUTO  -> 31 
  | REGISTER  -> 32 
  | ASSIGN  -> 33 
  | LEFT_ASSIGN  -> 34 
  | RIGHT_ASSIGN  -> 35 
  | XOR_ASSIGN  -> 36 
  | OR_ASSIGN  -> 37 
  | AND_ASSIGN  -> 38 
  | MUL_ASSIGN  -> 39 
  | DIV_ASSIGN  -> 40 
  | MOD_ASSIGN  -> 41 
  | SUB_ASSIGN  -> 42 
  | ADD_ASSIGN  -> 43 
  | LOGICAL_AND_OP  -> 44 
  | LOGICAL_OR_OP  -> 45 
  | LOGICAL_NOT_OP  -> 46 
  | ELLIPSIS  -> 47 
  | DOT  -> 48 
  | COMMA  -> 49 
  | COLON  -> 50 
  | SEMICOLON  -> 51 
  | L_ROUND_BRACKET  -> 52 
  | R_ROUND_BRACKET  -> 53 
  | L_CURRLY_BRACKET  -> 54 
  | R_CURRLY_BRACKET  -> 55 
  | L_SQUARE_BRACKET  -> 56 
  | R_SQUARE_BRACKET  -> 57 
  | LEFT_OP  -> 58 
  | RIGHT_OP  -> 59 
  | LT_OP  -> 60 
  | GT_OP  -> 61 
  | LE_OP  -> 62 
  | GE_OP  -> 63 
  | EQ_OP  -> 64 
  | NE_OP  -> 65 
  | ADD_OP  -> 66 
  | SUB_OP  -> 67 
  | MUL_OP  -> 68 
  | DIV_OP  -> 69 
  | MOD_OP  -> 70 
  | AND_OP  -> 71 
  | OR_OP  -> 72 
  | NOT_OP  -> 73 
  | XOR_OP  -> 74 
  | TETRNARY_OP  -> 75 
  | INC_OP  -> 76 
  | DEC_OP  -> 77 
  | PTR_OP  -> 78 
  | STRING_LITERAL _ -> 79 
  | CONSTANT _ -> 80 
  | IDENTIFIER _ -> 81 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_CASE 
  | 2 -> TOKEN_DEFAULT 
  | 3 -> TOKEN_IF 
  | 4 -> TOKEN_ELSE 
  | 5 -> TOKEN_SWITCH 
  | 6 -> TOKEN_WHILE 
  | 7 -> TOKEN_DO 
  | 8 -> TOKEN_FOR 
  | 9 -> TOKEN_GOTO 
  | 10 -> TOKEN_CONTINUE 
  | 11 -> TOKEN_BREAK 
  | 12 -> TOKEN_RETURN 
  | 13 -> TOKEN_STRUCT 
  | 14 -> TOKEN_UNION 
  | 15 -> TOKEN_ENUM 
  | 16 -> TOKEN_CHAR 
  | 17 -> TOKEN_SHORT 
  | 18 -> TOKEN_INT 
  | 19 -> TOKEN_LONG 
  | 20 -> TOKEN_SIGNED 
  | 21 -> TOKEN_UNSIGNED 
  | 22 -> TOKEN_FLOAT 
  | 23 -> TOKEN_DOUBLE 
  | 24 -> TOKEN_CONST 
  | 25 -> TOKEN_VOLATILE 
  | 26 -> TOKEN_VOID 
  | 27 -> TOKEN_SIZEOF 
  | 28 -> TOKEN_TYPEDEF 
  | 29 -> TOKEN_EXTERN 
  | 30 -> TOKEN_STATIC 
  | 31 -> TOKEN_AUTO 
  | 32 -> TOKEN_REGISTER 
  | 33 -> TOKEN_ASSIGN 
  | 34 -> TOKEN_LEFT_ASSIGN 
  | 35 -> TOKEN_RIGHT_ASSIGN 
  | 36 -> TOKEN_XOR_ASSIGN 
  | 37 -> TOKEN_OR_ASSIGN 
  | 38 -> TOKEN_AND_ASSIGN 
  | 39 -> TOKEN_MUL_ASSIGN 
  | 40 -> TOKEN_DIV_ASSIGN 
  | 41 -> TOKEN_MOD_ASSIGN 
  | 42 -> TOKEN_SUB_ASSIGN 
  | 43 -> TOKEN_ADD_ASSIGN 
  | 44 -> TOKEN_LOGICAL_AND_OP 
  | 45 -> TOKEN_LOGICAL_OR_OP 
  | 46 -> TOKEN_LOGICAL_NOT_OP 
  | 47 -> TOKEN_ELLIPSIS 
  | 48 -> TOKEN_DOT 
  | 49 -> TOKEN_COMMA 
  | 50 -> TOKEN_COLON 
  | 51 -> TOKEN_SEMICOLON 
  | 52 -> TOKEN_L_ROUND_BRACKET 
  | 53 -> TOKEN_R_ROUND_BRACKET 
  | 54 -> TOKEN_L_CURRLY_BRACKET 
  | 55 -> TOKEN_R_CURRLY_BRACKET 
  | 56 -> TOKEN_L_SQUARE_BRACKET 
  | 57 -> TOKEN_R_SQUARE_BRACKET 
  | 58 -> TOKEN_LEFT_OP 
  | 59 -> TOKEN_RIGHT_OP 
  | 60 -> TOKEN_LT_OP 
  | 61 -> TOKEN_GT_OP 
  | 62 -> TOKEN_LE_OP 
  | 63 -> TOKEN_GE_OP 
  | 64 -> TOKEN_EQ_OP 
  | 65 -> TOKEN_NE_OP 
  | 66 -> TOKEN_ADD_OP 
  | 67 -> TOKEN_SUB_OP 
  | 68 -> TOKEN_MUL_OP 
  | 69 -> TOKEN_DIV_OP 
  | 70 -> TOKEN_MOD_OP 
  | 71 -> TOKEN_AND_OP 
  | 72 -> TOKEN_OR_OP 
  | 73 -> TOKEN_NOT_OP 
  | 74 -> TOKEN_XOR_OP 
  | 75 -> TOKEN_TETRNARY_OP 
  | 76 -> TOKEN_INC_OP 
  | 77 -> TOKEN_DEC_OP 
  | 78 -> TOKEN_PTR_OP 
  | 79 -> TOKEN_STRING_LITERAL 
  | 80 -> TOKEN_CONSTANT 
  | 81 -> TOKEN_IDENTIFIER 
  | 84 -> TOKEN_end_of_input
  | 82 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startdeclaration 
    | 1 -> NONTERM__startStatement 
    | 2 -> NONTERM__startexpression 
    | 3 -> NONTERM__starttranslation_unit 
    | 4 -> NONTERM_expression 
    | 5 -> NONTERM_expression 
    | 6 -> NONTERM_assignment_expression 
    | 7 -> NONTERM_assignment_expression 
    | 8 -> NONTERM_assignment_operator 
    | 9 -> NONTERM_assignment_operator 
    | 10 -> NONTERM_assignment_operator 
    | 11 -> NONTERM_assignment_operator 
    | 12 -> NONTERM_assignment_operator 
    | 13 -> NONTERM_assignment_operator 
    | 14 -> NONTERM_assignment_operator 
    | 15 -> NONTERM_assignment_operator 
    | 16 -> NONTERM_assignment_operator 
    | 17 -> NONTERM_assignment_operator 
    | 18 -> NONTERM_assignment_operator 
    | 19 -> NONTERM_conditional_expression 
    | 20 -> NONTERM_conditional_expression 
    | 21 -> NONTERM_logical_or_expression 
    | 22 -> NONTERM_logical_or_expression 
    | 23 -> NONTERM_logical_and_expression 
    | 24 -> NONTERM_logical_and_expression 
    | 25 -> NONTERM_inclusive_or_expression 
    | 26 -> NONTERM_inclusive_or_expression 
    | 27 -> NONTERM_exclusive_or_expression 
    | 28 -> NONTERM_exclusive_or_expression 
    | 29 -> NONTERM_and_expression 
    | 30 -> NONTERM_and_expression 
    | 31 -> NONTERM_equality_expression 
    | 32 -> NONTERM_equality_expression 
    | 33 -> NONTERM_equality_expression 
    | 34 -> NONTERM_relational_expression 
    | 35 -> NONTERM_relational_expression 
    | 36 -> NONTERM_relational_expression 
    | 37 -> NONTERM_relational_expression 
    | 38 -> NONTERM_relational_expression 
    | 39 -> NONTERM_shift_expression 
    | 40 -> NONTERM_shift_expression 
    | 41 -> NONTERM_shift_expression 
    | 42 -> NONTERM_additive_expression 
    | 43 -> NONTERM_additive_expression 
    | 44 -> NONTERM_additive_expression 
    | 45 -> NONTERM_multiplicative_expression 
    | 46 -> NONTERM_multiplicative_expression 
    | 47 -> NONTERM_multiplicative_expression 
    | 48 -> NONTERM_multiplicative_expression 
    | 49 -> NONTERM_cast_expression 
    | 50 -> NONTERM_cast_expression 
    | 51 -> NONTERM_unary_expression 
    | 52 -> NONTERM_unary_expression 
    | 53 -> NONTERM_unary_expression 
    | 54 -> NONTERM_unary_expression 
    | 55 -> NONTERM_unary_expression 
    | 56 -> NONTERM_unary_expression 
    | 57 -> NONTERM_unary_operator 
    | 58 -> NONTERM_unary_operator 
    | 59 -> NONTERM_unary_operator 
    | 60 -> NONTERM_unary_operator 
    | 61 -> NONTERM_unary_operator 
    | 62 -> NONTERM_unary_operator 
    | 63 -> NONTERM_argument_expression_list 
    | 64 -> NONTERM_argument_expression_list 
    | 65 -> NONTERM_postfix_expression 
    | 66 -> NONTERM_postfix_expression 
    | 67 -> NONTERM_postfix_expression 
    | 68 -> NONTERM_postfix_expression 
    | 69 -> NONTERM_postfix_expression 
    | 70 -> NONTERM_postfix_expression 
    | 71 -> NONTERM_postfix_expression 
    | 72 -> NONTERM_postfix_expression 
    | 73 -> NONTERM_primary_expression 
    | 74 -> NONTERM_primary_expression 
    | 75 -> NONTERM_primary_expression 
    | 76 -> NONTERM_primary_expression 
    | 77 -> NONTERM_constant_expression 
    | 78 -> NONTERM_storage_class_Specifier 
    | 79 -> NONTERM_storage_class_Specifier 
    | 80 -> NONTERM_storage_class_Specifier 
    | 81 -> NONTERM_storage_class_Specifier 
    | 82 -> NONTERM_storage_class_Specifier 
    | 83 -> NONTERM_type_Specifier 
    | 84 -> NONTERM_type_Specifier 
    | 85 -> NONTERM_type_Specifier 
    | 86 -> NONTERM_type_Specifier 
    | 87 -> NONTERM_type_Specifier 
    | 88 -> NONTERM_type_Specifier 
    | 89 -> NONTERM_type_Specifier 
    | 90 -> NONTERM_type_Specifier 
    | 91 -> NONTERM_type_Specifier 
    | 92 -> NONTERM_type_Specifier 
    | 93 -> NONTERM_type_Specifier 
    | 94 -> NONTERM_enum_Specifier 
    | 95 -> NONTERM_enum_Specifier 
    | 96 -> NONTERM_enum_Specifier 
    | 97 -> NONTERM_enumerator_list 
    | 98 -> NONTERM_enumerator_list 
    | 99 -> NONTERM_enumerator 
    | 100 -> NONTERM_enumerator 
    | 101 -> NONTERM_struct_or_union_Specifier 
    | 102 -> NONTERM_struct_or_union_Specifier 
    | 103 -> NONTERM_struct_or_union_Specifier 
    | 104 -> NONTERM_struct_declaration_list 
    | 105 -> NONTERM_struct_declaration_list 
    | 106 -> NONTERM_struct_declaration 
    | 107 -> NONTERM_struct_declarator_list 
    | 108 -> NONTERM_struct_declarator_list 
    | 109 -> NONTERM_struct_declarator 
    | 110 -> NONTERM_struct_declarator 
    | 111 -> NONTERM_struct_declarator 
    | 112 -> NONTERM_type_qualifier 
    | 113 -> NONTERM_type_qualifier 
    | 114 -> NONTERM_struct_or_union 
    | 115 -> NONTERM_struct_or_union 
    | 116 -> NONTERM_declaration 
    | 117 -> NONTERM_declaration 
    | 118 -> NONTERM_declaration_list 
    | 119 -> NONTERM_declaration_list 
    | 120 -> NONTERM_declaration_Specifiers 
    | 121 -> NONTERM_declaration_Specifiers 
    | 122 -> NONTERM_declaration_Specifiers 
    | 123 -> NONTERM_declaration_Specifiers 
    | 124 -> NONTERM_declaration_Specifiers 
    | 125 -> NONTERM_declaration_Specifiers 
    | 126 -> NONTERM_Specifier_qualifier_list 
    | 127 -> NONTERM_Specifier_qualifier_list 
    | 128 -> NONTERM_Specifier_qualifier_list 
    | 129 -> NONTERM_Specifier_qualifier_list 
    | 130 -> NONTERM_init_declarator_list 
    | 131 -> NONTERM_init_declarator_list 
    | 132 -> NONTERM_init_declarator 
    | 133 -> NONTERM_init_declarator 
    | 134 -> NONTERM_declarator 
    | 135 -> NONTERM_declarator 
    | 136 -> NONTERM_direct_declarator 
    | 137 -> NONTERM_direct_declarator 
    | 138 -> NONTERM_direct_declarator 
    | 139 -> NONTERM_direct_declarator 
    | 140 -> NONTERM_direct_declarator 
    | 141 -> NONTERM_direct_declarator 
    | 142 -> NONTERM_direct_declarator 
    | 143 -> NONTERM_pointer 
    | 144 -> NONTERM_pointer 
    | 145 -> NONTERM_pointer 
    | 146 -> NONTERM_pointer 
    | 147 -> NONTERM_type_qualifier_list 
    | 148 -> NONTERM_type_qualifier_list 
    | 149 -> NONTERM_Parameter_type_list 
    | 150 -> NONTERM_Parameter_type_list 
    | 151 -> NONTERM_Parameter_list 
    | 152 -> NONTERM_Parameter_list 
    | 153 -> NONTERM_Parameter_declaration 
    | 154 -> NONTERM_Parameter_declaration 
    | 155 -> NONTERM_Parameter_declaration 
    | 156 -> NONTERM_identifier_list 
    | 157 -> NONTERM_identifier_list 
    | 158 -> NONTERM_type_name 
    | 159 -> NONTERM_type_name 
    | 160 -> NONTERM_abstract_declarator 
    | 161 -> NONTERM_abstract_declarator 
    | 162 -> NONTERM_abstract_declarator 
    | 163 -> NONTERM_direct_abstract_declarator 
    | 164 -> NONTERM_direct_abstract_declarator 
    | 165 -> NONTERM_direct_abstract_declarator 
    | 166 -> NONTERM_direct_abstract_declarator 
    | 167 -> NONTERM_direct_abstract_declarator 
    | 168 -> NONTERM_direct_abstract_declarator 
    | 169 -> NONTERM_direct_abstract_declarator 
    | 170 -> NONTERM_direct_abstract_declarator 
    | 171 -> NONTERM_direct_abstract_declarator 
    | 172 -> NONTERM_initializer 
    | 173 -> NONTERM_initializer 
    | 174 -> NONTERM_initializer 
    | 175 -> NONTERM_initializer_list 
    | 176 -> NONTERM_initializer_list 
    | 177 -> NONTERM_Statement 
    | 178 -> NONTERM_Statement 
    | 179 -> NONTERM_Statement 
    | 180 -> NONTERM_Statement 
    | 181 -> NONTERM_Statement 
    | 182 -> NONTERM_Statement 
    | 183 -> NONTERM_labeled_Statement 
    | 184 -> NONTERM_labeled_Statement 
    | 185 -> NONTERM_labeled_Statement 
    | 186 -> NONTERM_compound_Statement 
    | 187 -> NONTERM_compound_Statement 
    | 188 -> NONTERM_compound_Statement 
    | 189 -> NONTERM_compound_Statement 
    | 190 -> NONTERM_Statement_list 
    | 191 -> NONTERM_Statement_list 
    | 192 -> NONTERM_expression_Statement 
    | 193 -> NONTERM_expression_Statement 
    | 194 -> NONTERM_selection_Statement 
    | 195 -> NONTERM_selection_Statement 
    | 196 -> NONTERM_selection_Statement 
    | 197 -> NONTERM_iteration_Statement 
    | 198 -> NONTERM_iteration_Statement 
    | 199 -> NONTERM_iteration_Statement 
    | 200 -> NONTERM_iteration_Statement 
    | 201 -> NONTERM_jump_Statement 
    | 202 -> NONTERM_jump_Statement 
    | 203 -> NONTERM_jump_Statement 
    | 204 -> NONTERM_jump_Statement 
    | 205 -> NONTERM_jump_Statement 
    | 206 -> NONTERM_translation_unit 
    | 207 -> NONTERM_translation_unit 
    | 208 -> NONTERM_external_declaration 
    | 209 -> NONTERM_external_declaration 
    | 210 -> NONTERM_function_definition 
    | 211 -> NONTERM_function_definition 
    | 212 -> NONTERM_function_definition 
    | 213 -> NONTERM_function_definition 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 84 
let _fsyacc_tagOfErrorTerminal = 82

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | IF  -> "IF" 
  | ELSE  -> "ELSE" 
  | SWITCH  -> "SWITCH" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | FOR  -> "FOR" 
  | GOTO  -> "GOTO" 
  | CONTINUE  -> "CONTINUE" 
  | BREAK  -> "BREAK" 
  | RETURN  -> "RETURN" 
  | STRUCT  -> "STRUCT" 
  | UNION  -> "UNION" 
  | ENUM  -> "ENUM" 
  | CHAR  -> "CHAR" 
  | SHORT  -> "SHORT" 
  | INT  -> "INT" 
  | LONG  -> "LONG" 
  | SIGNED  -> "SIGNED" 
  | UNSIGNED  -> "UNSIGNED" 
  | FLOAT  -> "FLOAT" 
  | DOUBLE  -> "DOUBLE" 
  | CONST  -> "CONST" 
  | VOLATILE  -> "VOLATILE" 
  | VOID  -> "VOID" 
  | SIZEOF  -> "SIZEOF" 
  | TYPEDEF  -> "TYPEDEF" 
  | EXTERN  -> "EXTERN" 
  | STATIC  -> "STATIC" 
  | AUTO  -> "AUTO" 
  | REGISTER  -> "REGISTER" 
  | ASSIGN  -> "ASSIGN" 
  | LEFT_ASSIGN  -> "LEFT_ASSIGN" 
  | RIGHT_ASSIGN  -> "RIGHT_ASSIGN" 
  | XOR_ASSIGN  -> "XOR_ASSIGN" 
  | OR_ASSIGN  -> "OR_ASSIGN" 
  | AND_ASSIGN  -> "AND_ASSIGN" 
  | MUL_ASSIGN  -> "MUL_ASSIGN" 
  | DIV_ASSIGN  -> "DIV_ASSIGN" 
  | MOD_ASSIGN  -> "MOD_ASSIGN" 
  | SUB_ASSIGN  -> "SUB_ASSIGN" 
  | ADD_ASSIGN  -> "ADD_ASSIGN" 
  | LOGICAL_AND_OP  -> "LOGICAL_AND_OP" 
  | LOGICAL_OR_OP  -> "LOGICAL_OR_OP" 
  | LOGICAL_NOT_OP  -> "LOGICAL_NOT_OP" 
  | ELLIPSIS  -> "ELLIPSIS" 
  | DOT  -> "DOT" 
  | COMMA  -> "COMMA" 
  | COLON  -> "COLON" 
  | SEMICOLON  -> "SEMICOLON" 
  | L_ROUND_BRACKET  -> "L_ROUND_BRACKET" 
  | R_ROUND_BRACKET  -> "R_ROUND_BRACKET" 
  | L_CURRLY_BRACKET  -> "L_CURRLY_BRACKET" 
  | R_CURRLY_BRACKET  -> "R_CURRLY_BRACKET" 
  | L_SQUARE_BRACKET  -> "L_SQUARE_BRACKET" 
  | R_SQUARE_BRACKET  -> "R_SQUARE_BRACKET" 
  | LEFT_OP  -> "LEFT_OP" 
  | RIGHT_OP  -> "RIGHT_OP" 
  | LT_OP  -> "LT_OP" 
  | GT_OP  -> "GT_OP" 
  | LE_OP  -> "LE_OP" 
  | GE_OP  -> "GE_OP" 
  | EQ_OP  -> "EQ_OP" 
  | NE_OP  -> "NE_OP" 
  | ADD_OP  -> "ADD_OP" 
  | SUB_OP  -> "SUB_OP" 
  | MUL_OP  -> "MUL_OP" 
  | DIV_OP  -> "DIV_OP" 
  | MOD_OP  -> "MOD_OP" 
  | AND_OP  -> "AND_OP" 
  | OR_OP  -> "OR_OP" 
  | NOT_OP  -> "NOT_OP" 
  | XOR_OP  -> "XOR_OP" 
  | TETRNARY_OP  -> "TETRNARY_OP" 
  | INC_OP  -> "INC_OP" 
  | DEC_OP  -> "DEC_OP" 
  | PTR_OP  -> "PTR_OP" 
  | STRING_LITERAL _ -> "STRING_LITERAL" 
  | CONSTANT _ -> "CONSTANT" 
  | IDENTIFIER _ -> "IDENTIFIER" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | GOTO  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | UNION  -> (null : System.Object) 
  | ENUM  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | SHORT  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | LONG  -> (null : System.Object) 
  | SIGNED  -> (null : System.Object) 
  | UNSIGNED  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | DOUBLE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | VOLATILE  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | SIZEOF  -> (null : System.Object) 
  | TYPEDEF  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | AUTO  -> (null : System.Object) 
  | REGISTER  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | LEFT_ASSIGN  -> (null : System.Object) 
  | RIGHT_ASSIGN  -> (null : System.Object) 
  | XOR_ASSIGN  -> (null : System.Object) 
  | OR_ASSIGN  -> (null : System.Object) 
  | AND_ASSIGN  -> (null : System.Object) 
  | MUL_ASSIGN  -> (null : System.Object) 
  | DIV_ASSIGN  -> (null : System.Object) 
  | MOD_ASSIGN  -> (null : System.Object) 
  | SUB_ASSIGN  -> (null : System.Object) 
  | ADD_ASSIGN  -> (null : System.Object) 
  | LOGICAL_AND_OP  -> (null : System.Object) 
  | LOGICAL_OR_OP  -> (null : System.Object) 
  | LOGICAL_NOT_OP  -> (null : System.Object) 
  | ELLIPSIS  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | L_ROUND_BRACKET  -> (null : System.Object) 
  | R_ROUND_BRACKET  -> (null : System.Object) 
  | L_CURRLY_BRACKET  -> (null : System.Object) 
  | R_CURRLY_BRACKET  -> (null : System.Object) 
  | L_SQUARE_BRACKET  -> (null : System.Object) 
  | R_SQUARE_BRACKET  -> (null : System.Object) 
  | LEFT_OP  -> (null : System.Object) 
  | RIGHT_OP  -> (null : System.Object) 
  | LT_OP  -> (null : System.Object) 
  | GT_OP  -> (null : System.Object) 
  | LE_OP  -> (null : System.Object) 
  | GE_OP  -> (null : System.Object) 
  | EQ_OP  -> (null : System.Object) 
  | NE_OP  -> (null : System.Object) 
  | ADD_OP  -> (null : System.Object) 
  | SUB_OP  -> (null : System.Object) 
  | MUL_OP  -> (null : System.Object) 
  | DIV_OP  -> (null : System.Object) 
  | MOD_OP  -> (null : System.Object) 
  | AND_OP  -> (null : System.Object) 
  | OR_OP  -> (null : System.Object) 
  | NOT_OP  -> (null : System.Object) 
  | XOR_OP  -> (null : System.Object) 
  | TETRNARY_OP  -> (null : System.Object) 
  | INC_OP  -> (null : System.Object) 
  | DEC_OP  -> (null : System.Object) 
  | PTR_OP  -> (null : System.Object) 
  | STRING_LITERAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CONSTANT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 29us; 65535us; 2us; 12us; 4us; 5us; 37us; 9us; 87us; 11us; 100us; 11us; 114us; 10us; 129us; 11us; 193us; 12us; 287us; 12us; 291us; 12us; 294us; 12us; 296us; 12us; 298us; 12us; 301us; 12us; 308us; 13us; 309us; 12us; 311us; 12us; 314us; 14us; 315us; 12us; 318us; 15us; 319us; 12us; 321us; 12us; 324us; 16us; 328us; 12us; 329us; 12us; 330us; 17us; 331us; 12us; 333us; 12us; 342us; 18us; 36us; 65535us; 2us; 8us; 4us; 8us; 19us; 20us; 23us; 24us; 37us; 8us; 87us; 8us; 100us; 8us; 111us; 112us; 114us; 8us; 116us; 109us; 129us; 8us; 193us; 8us; 212us; 273us; 274us; 273us; 277us; 273us; 287us; 8us; 291us; 8us; 294us; 8us; 296us; 8us; 298us; 8us; 301us; 8us; 308us; 8us; 309us; 8us; 311us; 8us; 314us; 8us; 315us; 8us; 318us; 8us; 319us; 8us; 321us; 8us; 324us; 8us; 328us; 8us; 329us; 8us; 330us; 8us; 331us; 8us; 333us; 8us; 342us; 8us; 1us; 65535us; 22us; 23us; 44us; 65535us; 2us; 21us; 4us; 21us; 19us; 21us; 23us; 21us; 37us; 21us; 38us; 39us; 87us; 21us; 100us; 21us; 111us; 21us; 114us; 21us; 116us; 21us; 129us; 21us; 160us; 131us; 179us; 131us; 181us; 131us; 193us; 21us; 212us; 21us; 223us; 131us; 258us; 131us; 262us; 131us; 274us; 21us; 277us; 21us; 287us; 21us; 289us; 131us; 291us; 21us; 294us; 21us; 296us; 21us; 298us; 21us; 301us; 21us; 308us; 21us; 309us; 21us; 311us; 21us; 314us; 21us; 315us; 21us; 318us; 21us; 319us; 21us; 321us; 21us; 324us; 21us; 328us; 21us; 329us; 21us; 330us; 21us; 331us; 21us; 333us; 21us; 342us; 21us; 44us; 65535us; 2us; 36us; 4us; 36us; 19us; 36us; 23us; 36us; 37us; 36us; 38us; 36us; 87us; 36us; 100us; 36us; 111us; 36us; 114us; 36us; 116us; 36us; 129us; 36us; 160us; 36us; 179us; 36us; 181us; 36us; 193us; 36us; 212us; 36us; 223us; 36us; 258us; 36us; 262us; 36us; 274us; 36us; 277us; 36us; 287us; 36us; 289us; 36us; 291us; 36us; 294us; 36us; 296us; 36us; 298us; 36us; 301us; 36us; 308us; 36us; 309us; 36us; 311us; 36us; 314us; 36us; 315us; 36us; 318us; 36us; 319us; 36us; 321us; 36us; 324us; 36us; 328us; 36us; 329us; 36us; 330us; 36us; 331us; 36us; 333us; 36us; 342us; 36us; 45us; 65535us; 2us; 40us; 4us; 40us; 19us; 40us; 23us; 40us; 37us; 40us; 38us; 40us; 41us; 42us; 87us; 40us; 100us; 40us; 111us; 40us; 114us; 40us; 116us; 40us; 129us; 40us; 160us; 40us; 179us; 40us; 181us; 40us; 193us; 40us; 212us; 40us; 223us; 40us; 258us; 40us; 262us; 40us; 274us; 40us; 277us; 40us; 287us; 40us; 289us; 40us; 291us; 40us; 294us; 40us; 296us; 40us; 298us; 40us; 301us; 40us; 308us; 40us; 309us; 40us; 311us; 40us; 314us; 40us; 315us; 40us; 318us; 40us; 319us; 40us; 321us; 40us; 324us; 40us; 328us; 40us; 329us; 40us; 330us; 40us; 331us; 40us; 333us; 40us; 342us; 40us; 46us; 65535us; 2us; 43us; 4us; 43us; 19us; 43us; 23us; 43us; 37us; 43us; 38us; 43us; 41us; 43us; 44us; 45us; 87us; 43us; 100us; 43us; 111us; 43us; 114us; 43us; 116us; 43us; 129us; 43us; 160us; 43us; 179us; 43us; 181us; 43us; 193us; 43us; 212us; 43us; 223us; 43us; 258us; 43us; 262us; 43us; 274us; 43us; 277us; 43us; 287us; 43us; 289us; 43us; 291us; 43us; 294us; 43us; 296us; 43us; 298us; 43us; 301us; 43us; 308us; 43us; 309us; 43us; 311us; 43us; 314us; 43us; 315us; 43us; 318us; 43us; 319us; 43us; 321us; 43us; 324us; 43us; 328us; 43us; 329us; 43us; 330us; 43us; 331us; 43us; 333us; 43us; 342us; 43us; 47us; 65535us; 2us; 46us; 4us; 46us; 19us; 46us; 23us; 46us; 37us; 46us; 38us; 46us; 41us; 46us; 44us; 46us; 47us; 48us; 87us; 46us; 100us; 46us; 111us; 46us; 114us; 46us; 116us; 46us; 129us; 46us; 160us; 46us; 179us; 46us; 181us; 46us; 193us; 46us; 212us; 46us; 223us; 46us; 258us; 46us; 262us; 46us; 274us; 46us; 277us; 46us; 287us; 46us; 289us; 46us; 291us; 46us; 294us; 46us; 296us; 46us; 298us; 46us; 301us; 46us; 308us; 46us; 309us; 46us; 311us; 46us; 314us; 46us; 315us; 46us; 318us; 46us; 319us; 46us; 321us; 46us; 324us; 46us; 328us; 46us; 329us; 46us; 330us; 46us; 331us; 46us; 333us; 46us; 342us; 46us; 48us; 65535us; 2us; 49us; 4us; 49us; 19us; 49us; 23us; 49us; 37us; 49us; 38us; 49us; 41us; 49us; 44us; 49us; 47us; 49us; 50us; 51us; 87us; 49us; 100us; 49us; 111us; 49us; 114us; 49us; 116us; 49us; 129us; 49us; 160us; 49us; 179us; 49us; 181us; 49us; 193us; 49us; 212us; 49us; 223us; 49us; 258us; 49us; 262us; 49us; 274us; 49us; 277us; 49us; 287us; 49us; 289us; 49us; 291us; 49us; 294us; 49us; 296us; 49us; 298us; 49us; 301us; 49us; 308us; 49us; 309us; 49us; 311us; 49us; 314us; 49us; 315us; 49us; 318us; 49us; 319us; 49us; 321us; 49us; 324us; 49us; 328us; 49us; 329us; 49us; 330us; 49us; 331us; 49us; 333us; 49us; 342us; 49us; 49us; 65535us; 2us; 52us; 4us; 52us; 19us; 52us; 23us; 52us; 37us; 52us; 38us; 52us; 41us; 52us; 44us; 52us; 47us; 52us; 50us; 52us; 53us; 54us; 87us; 52us; 100us; 52us; 111us; 52us; 114us; 52us; 116us; 52us; 129us; 52us; 160us; 52us; 179us; 52us; 181us; 52us; 193us; 52us; 212us; 52us; 223us; 52us; 258us; 52us; 262us; 52us; 274us; 52us; 277us; 52us; 287us; 52us; 289us; 52us; 291us; 52us; 294us; 52us; 296us; 52us; 298us; 52us; 301us; 52us; 308us; 52us; 309us; 52us; 311us; 52us; 314us; 52us; 315us; 52us; 318us; 52us; 319us; 52us; 321us; 52us; 324us; 52us; 328us; 52us; 329us; 52us; 330us; 52us; 331us; 52us; 333us; 52us; 342us; 52us; 51us; 65535us; 2us; 55us; 4us; 55us; 19us; 55us; 23us; 55us; 37us; 55us; 38us; 55us; 41us; 55us; 44us; 55us; 47us; 55us; 50us; 55us; 53us; 55us; 56us; 57us; 58us; 59us; 87us; 55us; 100us; 55us; 111us; 55us; 114us; 55us; 116us; 55us; 129us; 55us; 160us; 55us; 179us; 55us; 181us; 55us; 193us; 55us; 212us; 55us; 223us; 55us; 258us; 55us; 262us; 55us; 274us; 55us; 277us; 55us; 287us; 55us; 289us; 55us; 291us; 55us; 294us; 55us; 296us; 55us; 298us; 55us; 301us; 55us; 308us; 55us; 309us; 55us; 311us; 55us; 314us; 55us; 315us; 55us; 318us; 55us; 319us; 55us; 321us; 55us; 324us; 55us; 328us; 55us; 329us; 55us; 330us; 55us; 331us; 55us; 333us; 55us; 342us; 55us; 55us; 65535us; 2us; 60us; 4us; 60us; 19us; 60us; 23us; 60us; 37us; 60us; 38us; 60us; 41us; 60us; 44us; 60us; 47us; 60us; 50us; 60us; 53us; 60us; 56us; 60us; 58us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 87us; 60us; 100us; 60us; 111us; 60us; 114us; 60us; 116us; 60us; 129us; 60us; 160us; 60us; 179us; 60us; 181us; 60us; 193us; 60us; 212us; 60us; 223us; 60us; 258us; 60us; 262us; 60us; 274us; 60us; 277us; 60us; 287us; 60us; 289us; 60us; 291us; 60us; 294us; 60us; 296us; 60us; 298us; 60us; 301us; 60us; 308us; 60us; 309us; 60us; 311us; 60us; 314us; 60us; 315us; 60us; 318us; 60us; 319us; 60us; 321us; 60us; 324us; 60us; 328us; 60us; 329us; 60us; 330us; 60us; 331us; 60us; 333us; 60us; 342us; 60us; 57us; 65535us; 2us; 69us; 4us; 69us; 19us; 69us; 23us; 69us; 37us; 69us; 38us; 69us; 41us; 69us; 44us; 69us; 47us; 69us; 50us; 69us; 53us; 69us; 56us; 69us; 58us; 69us; 61us; 69us; 63us; 69us; 65us; 69us; 67us; 69us; 70us; 71us; 72us; 73us; 87us; 69us; 100us; 69us; 111us; 69us; 114us; 69us; 116us; 69us; 129us; 69us; 160us; 69us; 179us; 69us; 181us; 69us; 193us; 69us; 212us; 69us; 223us; 69us; 258us; 69us; 262us; 69us; 274us; 69us; 277us; 69us; 287us; 69us; 289us; 69us; 291us; 69us; 294us; 69us; 296us; 69us; 298us; 69us; 301us; 69us; 308us; 69us; 309us; 69us; 311us; 69us; 314us; 69us; 315us; 69us; 318us; 69us; 319us; 69us; 321us; 69us; 324us; 69us; 328us; 69us; 329us; 69us; 330us; 69us; 331us; 69us; 333us; 69us; 342us; 69us; 59us; 65535us; 2us; 74us; 4us; 74us; 19us; 74us; 23us; 74us; 37us; 74us; 38us; 74us; 41us; 74us; 44us; 74us; 47us; 74us; 50us; 74us; 53us; 74us; 56us; 74us; 58us; 74us; 61us; 74us; 63us; 74us; 65us; 74us; 67us; 74us; 70us; 74us; 72us; 74us; 75us; 76us; 77us; 78us; 87us; 74us; 100us; 74us; 111us; 74us; 114us; 74us; 116us; 74us; 129us; 74us; 160us; 74us; 179us; 74us; 181us; 74us; 193us; 74us; 212us; 74us; 223us; 74us; 258us; 74us; 262us; 74us; 274us; 74us; 277us; 74us; 287us; 74us; 289us; 74us; 291us; 74us; 294us; 74us; 296us; 74us; 298us; 74us; 301us; 74us; 308us; 74us; 309us; 74us; 311us; 74us; 314us; 74us; 315us; 74us; 318us; 74us; 319us; 74us; 321us; 74us; 324us; 74us; 328us; 74us; 329us; 74us; 330us; 74us; 331us; 74us; 333us; 74us; 342us; 74us; 64us; 65535us; 2us; 79us; 4us; 79us; 19us; 79us; 23us; 79us; 37us; 79us; 38us; 79us; 41us; 79us; 44us; 79us; 47us; 79us; 50us; 79us; 53us; 79us; 56us; 79us; 58us; 79us; 61us; 79us; 63us; 79us; 65us; 79us; 67us; 79us; 70us; 79us; 72us; 79us; 75us; 79us; 77us; 79us; 80us; 81us; 82us; 83us; 84us; 85us; 87us; 79us; 89us; 90us; 96us; 97us; 100us; 79us; 111us; 79us; 114us; 79us; 116us; 79us; 129us; 79us; 160us; 79us; 179us; 79us; 181us; 79us; 193us; 79us; 212us; 79us; 223us; 79us; 258us; 79us; 262us; 79us; 274us; 79us; 277us; 79us; 287us; 79us; 289us; 79us; 291us; 79us; 294us; 79us; 296us; 79us; 298us; 79us; 301us; 79us; 308us; 79us; 309us; 79us; 311us; 79us; 314us; 79us; 315us; 79us; 318us; 79us; 319us; 79us; 321us; 79us; 324us; 79us; 328us; 79us; 329us; 79us; 330us; 79us; 331us; 79us; 333us; 79us; 342us; 79us; 67us; 65535us; 2us; 22us; 4us; 22us; 19us; 22us; 23us; 22us; 37us; 22us; 38us; 86us; 41us; 86us; 44us; 86us; 47us; 86us; 50us; 86us; 53us; 86us; 56us; 86us; 58us; 86us; 61us; 86us; 63us; 86us; 65us; 86us; 67us; 86us; 70us; 86us; 72us; 86us; 75us; 86us; 77us; 86us; 80us; 86us; 82us; 86us; 84us; 86us; 87us; 22us; 89us; 86us; 92us; 93us; 94us; 95us; 96us; 86us; 98us; 99us; 100us; 22us; 111us; 22us; 114us; 22us; 116us; 22us; 129us; 22us; 160us; 86us; 179us; 86us; 181us; 86us; 193us; 22us; 212us; 22us; 223us; 86us; 258us; 86us; 262us; 86us; 274us; 22us; 277us; 22us; 287us; 22us; 289us; 86us; 291us; 22us; 294us; 22us; 296us; 22us; 298us; 22us; 301us; 22us; 308us; 22us; 309us; 22us; 311us; 22us; 314us; 22us; 315us; 22us; 318us; 22us; 319us; 22us; 321us; 22us; 324us; 22us; 328us; 22us; 329us; 22us; 330us; 22us; 331us; 22us; 333us; 22us; 342us; 22us; 67us; 65535us; 2us; 96us; 4us; 96us; 19us; 96us; 23us; 96us; 37us; 96us; 38us; 96us; 41us; 96us; 44us; 96us; 47us; 96us; 50us; 96us; 53us; 96us; 56us; 96us; 58us; 96us; 61us; 96us; 63us; 96us; 65us; 96us; 67us; 96us; 70us; 96us; 72us; 96us; 75us; 96us; 77us; 96us; 80us; 96us; 82us; 96us; 84us; 96us; 87us; 96us; 89us; 96us; 92us; 96us; 94us; 96us; 96us; 96us; 98us; 96us; 100us; 96us; 111us; 96us; 114us; 96us; 116us; 96us; 129us; 96us; 160us; 96us; 179us; 96us; 181us; 96us; 193us; 96us; 212us; 96us; 223us; 96us; 258us; 96us; 262us; 96us; 274us; 96us; 277us; 96us; 287us; 96us; 289us; 96us; 291us; 96us; 294us; 96us; 296us; 96us; 298us; 96us; 301us; 96us; 308us; 96us; 309us; 96us; 311us; 96us; 314us; 96us; 315us; 96us; 318us; 96us; 319us; 96us; 321us; 96us; 324us; 96us; 328us; 96us; 329us; 96us; 330us; 96us; 331us; 96us; 333us; 96us; 342us; 96us; 1us; 65535us; 116us; 110us; 67us; 65535us; 2us; 91us; 4us; 91us; 19us; 91us; 23us; 91us; 37us; 91us; 38us; 91us; 41us; 91us; 44us; 91us; 47us; 91us; 50us; 91us; 53us; 91us; 56us; 91us; 58us; 91us; 61us; 91us; 63us; 91us; 65us; 91us; 67us; 91us; 70us; 91us; 72us; 91us; 75us; 91us; 77us; 91us; 80us; 91us; 82us; 91us; 84us; 91us; 87us; 91us; 89us; 91us; 92us; 91us; 94us; 91us; 96us; 91us; 98us; 91us; 100us; 91us; 111us; 91us; 114us; 91us; 116us; 91us; 129us; 91us; 160us; 91us; 179us; 91us; 181us; 91us; 193us; 91us; 212us; 91us; 223us; 91us; 258us; 91us; 262us; 91us; 274us; 91us; 277us; 91us; 287us; 91us; 289us; 91us; 291us; 91us; 294us; 91us; 296us; 91us; 298us; 91us; 301us; 91us; 308us; 91us; 309us; 91us; 311us; 91us; 314us; 91us; 315us; 91us; 318us; 91us; 319us; 91us; 321us; 91us; 324us; 91us; 328us; 91us; 329us; 91us; 330us; 91us; 331us; 91us; 333us; 91us; 342us; 91us; 67us; 65535us; 2us; 113us; 4us; 113us; 19us; 113us; 23us; 113us; 37us; 113us; 38us; 113us; 41us; 113us; 44us; 113us; 47us; 113us; 50us; 113us; 53us; 113us; 56us; 113us; 58us; 113us; 61us; 113us; 63us; 113us; 65us; 113us; 67us; 113us; 70us; 113us; 72us; 113us; 75us; 113us; 77us; 113us; 80us; 113us; 82us; 113us; 84us; 113us; 87us; 113us; 89us; 113us; 92us; 113us; 94us; 113us; 96us; 113us; 98us; 113us; 100us; 113us; 111us; 113us; 114us; 113us; 116us; 113us; 129us; 113us; 160us; 113us; 179us; 113us; 181us; 113us; 193us; 113us; 212us; 113us; 223us; 113us; 258us; 113us; 262us; 113us; 274us; 113us; 277us; 113us; 287us; 113us; 289us; 113us; 291us; 113us; 294us; 113us; 296us; 113us; 298us; 113us; 301us; 113us; 308us; 113us; 309us; 113us; 311us; 113us; 314us; 113us; 315us; 113us; 318us; 113us; 319us; 113us; 321us; 113us; 324us; 113us; 328us; 113us; 329us; 113us; 330us; 113us; 331us; 113us; 333us; 113us; 342us; 113us; 7us; 65535us; 160us; 161us; 179us; 180us; 181us; 182us; 223us; 224us; 258us; 260us; 262us; 264us; 289us; 290us; 17us; 65535us; 0us; 197us; 6us; 197us; 7us; 197us; 193us; 197us; 194us; 197us; 195us; 197us; 197us; 197us; 199us; 197us; 201us; 197us; 211us; 197us; 220us; 197us; 227us; 197us; 240us; 197us; 255us; 197us; 269us; 197us; 296us; 197us; 351us; 197us; 25us; 65535us; 0us; 199us; 6us; 199us; 7us; 199us; 87us; 203us; 100us; 203us; 164us; 203us; 165us; 203us; 167us; 203us; 168us; 203us; 193us; 199us; 194us; 199us; 195us; 199us; 197us; 199us; 199us; 199us; 201us; 199us; 203us; 203us; 205us; 203us; 211us; 199us; 220us; 199us; 227us; 199us; 240us; 199us; 255us; 199us; 269us; 199us; 296us; 199us; 351us; 199us; 25us; 65535us; 0us; 147us; 6us; 147us; 7us; 147us; 87us; 147us; 100us; 147us; 164us; 147us; 165us; 147us; 167us; 147us; 168us; 147us; 193us; 147us; 194us; 147us; 195us; 147us; 197us; 147us; 199us; 147us; 201us; 147us; 203us; 147us; 205us; 147us; 211us; 147us; 220us; 147us; 227us; 147us; 240us; 147us; 255us; 147us; 269us; 147us; 296us; 147us; 351us; 147us; 2us; 65535us; 149us; 150us; 153us; 154us; 3us; 65535us; 149us; 156us; 153us; 156us; 157us; 158us; 25us; 65535us; 0us; 146us; 6us; 146us; 7us; 146us; 87us; 146us; 100us; 146us; 164us; 146us; 165us; 146us; 167us; 146us; 168us; 146us; 193us; 146us; 194us; 146us; 195us; 146us; 197us; 146us; 199us; 146us; 201us; 146us; 203us; 146us; 205us; 146us; 211us; 146us; 220us; 146us; 227us; 146us; 240us; 146us; 255us; 146us; 269us; 146us; 296us; 146us; 351us; 146us; 2us; 65535us; 164us; 165us; 167us; 168us; 4us; 65535us; 164us; 170us; 165us; 171us; 167us; 170us; 168us; 171us; 1us; 65535us; 172us; 173us; 2us; 65535us; 172us; 175us; 176us; 177us; 27us; 65535us; 0us; 201us; 6us; 201us; 7us; 201us; 87us; 205us; 100us; 205us; 164us; 205us; 165us; 205us; 167us; 205us; 168us; 205us; 193us; 201us; 194us; 201us; 195us; 201us; 197us; 201us; 199us; 201us; 201us; 201us; 203us; 205us; 205us; 205us; 211us; 201us; 220us; 201us; 227us; 201us; 233us; 237us; 234us; 238us; 240us; 201us; 255us; 201us; 269us; 201us; 296us; 201us; 351us; 201us; 25us; 65535us; 0us; 162us; 6us; 162us; 7us; 162us; 87us; 162us; 100us; 162us; 164us; 162us; 165us; 162us; 167us; 162us; 168us; 162us; 193us; 162us; 194us; 162us; 195us; 162us; 197us; 162us; 199us; 162us; 201us; 162us; 203us; 162us; 205us; 162us; 211us; 162us; 220us; 162us; 227us; 162us; 240us; 162us; 255us; 162us; 269us; 162us; 296us; 162us; 351us; 162us; 9us; 65535us; 0us; 1us; 6us; 348us; 7us; 348us; 193us; 196us; 194us; 196us; 195us; 196us; 211us; 192us; 296us; 192us; 351us; 192us; 3us; 65535us; 211us; 194us; 296us; 193us; 351us; 195us; 17us; 65535us; 0us; 187us; 6us; 188us; 7us; 188us; 193us; 187us; 194us; 187us; 195us; 187us; 197us; 198us; 199us; 200us; 201us; 202us; 211us; 187us; 220us; 244us; 227us; 244us; 240us; 244us; 255us; 244us; 269us; 244us; 296us; 187us; 351us; 187us; 8us; 65535us; 87us; 250us; 100us; 250us; 164us; 172us; 165us; 172us; 167us; 172us; 168us; 172us; 203us; 204us; 205us; 206us; 2us; 65535us; 187us; 190us; 188us; 190us; 3us; 65535us; 187us; 207us; 188us; 207us; 208us; 209us; 10us; 65535us; 6us; 351us; 7us; 351us; 172us; 178us; 176us; 178us; 187us; 210us; 188us; 211us; 208us; 210us; 219us; 221us; 220us; 221us; 244us; 245us; 12us; 65535us; 6us; 217us; 7us; 217us; 172us; 217us; 176us; 217us; 187us; 217us; 188us; 217us; 208us; 217us; 214us; 216us; 215us; 216us; 219us; 217us; 220us; 217us; 244us; 217us; 14us; 65535us; 6us; 214us; 7us; 214us; 172us; 214us; 176us; 214us; 187us; 214us; 188us; 214us; 208us; 214us; 219us; 214us; 220us; 215us; 233us; 235us; 234us; 236us; 244us; 215us; 250us; 252us; 255us; 252us; 1us; 65535us; 233us; 234us; 4us; 65535us; 220us; 267us; 227us; 228us; 255us; 267us; 269us; 271us; 4us; 65535us; 220us; 239us; 227us; 239us; 255us; 239us; 269us; 239us; 5us; 65535us; 220us; 242us; 227us; 242us; 240us; 243us; 255us; 242us; 269us; 242us; 1us; 65535us; 227us; 230us; 2us; 65535us; 87us; 88us; 100us; 101us; 4us; 65535us; 220us; 256us; 244us; 246us; 250us; 251us; 255us; 256us; 6us; 65535us; 215us; 254us; 220us; 253us; 244us; 253us; 250us; 253us; 252us; 254us; 255us; 253us; 3us; 65535us; 212us; 213us; 274us; 279us; 277us; 280us; 1us; 65535us; 274us; 275us; 15us; 65535us; 2us; 3us; 193us; 303us; 287us; 288us; 291us; 292us; 294us; 295us; 296us; 303us; 298us; 304us; 301us; 304us; 309us; 310us; 311us; 312us; 315us; 316us; 319us; 320us; 321us; 322us; 331us; 332us; 333us; 334us; 15us; 65535us; 2us; 281us; 193us; 281us; 287us; 281us; 291us; 281us; 294us; 281us; 296us; 281us; 298us; 281us; 301us; 281us; 309us; 281us; 311us; 281us; 315us; 281us; 319us; 281us; 321us; 281us; 331us; 281us; 333us; 281us; 19us; 65535us; 2us; 282us; 193us; 282us; 194us; 349us; 195us; 352us; 211us; 350us; 287us; 282us; 291us; 282us; 294us; 282us; 296us; 282us; 298us; 282us; 301us; 282us; 309us; 282us; 311us; 282us; 315us; 282us; 319us; 282us; 321us; 282us; 331us; 282us; 333us; 282us; 351us; 353us; 2us; 65535us; 193us; 301us; 296us; 298us; 17us; 65535us; 2us; 283us; 193us; 283us; 287us; 283us; 291us; 283us; 294us; 283us; 296us; 283us; 298us; 283us; 301us; 283us; 309us; 283us; 311us; 283us; 315us; 283us; 319us; 283us; 321us; 283us; 328us; 329us; 329us; 330us; 331us; 283us; 333us; 283us; 15us; 65535us; 2us; 284us; 193us; 284us; 287us; 284us; 291us; 284us; 294us; 284us; 296us; 284us; 298us; 284us; 301us; 284us; 309us; 284us; 311us; 284us; 315us; 284us; 319us; 284us; 321us; 284us; 331us; 284us; 333us; 284us; 15us; 65535us; 2us; 285us; 193us; 285us; 287us; 285us; 291us; 285us; 294us; 285us; 296us; 285us; 298us; 285us; 301us; 285us; 309us; 285us; 311us; 285us; 315us; 285us; 319us; 285us; 321us; 285us; 331us; 285us; 333us; 285us; 15us; 65535us; 2us; 286us; 193us; 286us; 287us; 286us; 291us; 286us; 294us; 286us; 296us; 286us; 298us; 286us; 301us; 286us; 309us; 286us; 311us; 286us; 315us; 286us; 319us; 286us; 321us; 286us; 331us; 286us; 333us; 286us; 1us; 65535us; 6us; 7us; 2us; 65535us; 6us; 345us; 7us; 346us; 2us; 65535us; 6us; 347us; 7us; 347us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 4us; 34us; 71us; 73us; 118us; 163us; 209us; 256us; 304us; 353us; 403us; 455us; 511us; 569us; 629us; 694us; 762us; 830us; 832us; 900us; 968us; 976us; 994us; 1020us; 1046us; 1049us; 1053us; 1079us; 1082us; 1087us; 1089us; 1092us; 1120us; 1146us; 1156us; 1160us; 1178us; 1187us; 1190us; 1194us; 1205us; 1218us; 1233us; 1235us; 1240us; 1245us; 1251us; 1253us; 1256us; 1261us; 1268us; 1272us; 1274us; 1290us; 1306us; 1326us; 1329us; 1347us; 1363us; 1379us; 1395us; 1397us; 1400us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 5us; 1us; 3us; 2us; 3us; 207us; 1us; 4us; 2us; 5us; 20us; 2us; 5us; 66us; 2us; 5us; 76us; 2us; 5us; 193us; 3us; 5us; 194us; 195us; 2us; 5us; 196us; 2us; 5us; 197us; 2us; 5us; 198us; 2us; 5us; 200us; 2us; 5us; 205us; 1us; 5us; 1us; 5us; 1us; 6us; 2us; 7us; 49us; 1us; 7us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 1us; 18us; 3us; 19us; 20us; 22us; 1us; 20us; 1us; 20us; 1us; 20us; 2us; 21us; 24us; 1us; 22us; 2us; 22us; 24us; 2us; 23us; 26us; 1us; 24us; 2us; 24us; 26us; 2us; 25us; 28us; 1us; 26us; 2us; 26us; 28us; 2us; 27us; 30us; 1us; 28us; 2us; 28us; 30us; 3us; 29us; 32us; 33us; 1us; 30us; 3us; 30us; 32us; 33us; 5us; 31us; 35us; 36us; 37us; 38us; 1us; 32us; 5us; 32us; 35us; 36us; 37us; 38us; 1us; 33us; 5us; 33us; 35us; 36us; 37us; 38us; 3us; 34us; 40us; 41us; 1us; 35us; 3us; 35us; 40us; 41us; 1us; 36us; 3us; 36us; 40us; 41us; 1us; 37us; 3us; 37us; 40us; 41us; 1us; 38us; 3us; 38us; 40us; 41us; 3us; 39us; 43us; 44us; 1us; 40us; 3us; 40us; 43us; 44us; 1us; 41us; 3us; 41us; 43us; 44us; 4us; 42us; 46us; 47us; 48us; 1us; 43us; 4us; 43us; 46us; 47us; 48us; 1us; 44us; 4us; 44us; 46us; 47us; 48us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 48us; 1us; 49us; 2us; 50us; 76us; 1us; 50us; 1us; 50us; 1us; 50us; 8us; 51us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 1us; 52us; 1us; 52us; 1us; 53us; 1us; 53us; 1us; 54us; 1us; 54us; 2us; 55us; 56us; 1us; 55us; 2us; 56us; 76us; 1us; 56us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 2us; 64us; 68us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 66us; 2us; 67us; 68us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 2us; 73us; 183us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 3us; 94us; 95us; 96us; 1us; 94us; 2us; 94us; 98us; 1us; 94us; 2us; 95us; 96us; 1us; 95us; 2us; 95us; 98us; 1us; 95us; 1us; 97us; 1us; 98us; 1us; 98us; 2us; 99us; 100us; 1us; 100us; 1us; 100us; 3us; 101us; 102us; 103us; 2us; 101us; 103us; 1us; 101us; 2us; 101us; 105us; 1us; 101us; 1us; 102us; 2us; 102us; 105us; 1us; 102us; 1us; 104us; 1us; 105us; 1us; 106us; 2us; 106us; 108us; 1us; 106us; 1us; 107us; 1us; 108us; 1us; 108us; 2us; 109us; 111us; 1us; 110us; 1us; 110us; 1us; 111us; 1us; 111us; 1us; 112us; 1us; 113us; 1us; 114us; 1us; 115us; 2us; 116us; 117us; 4us; 116us; 117us; 210us; 211us; 1us; 116us; 2us; 117us; 131us; 1us; 117us; 1us; 118us; 3us; 119us; 188us; 189us; 2us; 119us; 210us; 2us; 119us; 212us; 1us; 119us; 2us; 120us; 121us; 1us; 121us; 2us; 122us; 123us; 1us; 123us; 2us; 124us; 125us; 1us; 125us; 2us; 126us; 127us; 1us; 126us; 2us; 128us; 129us; 1us; 128us; 1us; 130us; 1us; 131us; 1us; 131us; 2us; 132us; 133us; 4us; 132us; 133us; 210us; 211us; 1us; 133us; 1us; 133us; 1us; 134us; 3us; 134us; 160us; 162us; 6us; 134us; 138us; 139us; 140us; 141us; 142us; 6us; 135us; 138us; 139us; 140us; 141us; 142us; 1us; 136us; 1us; 137us; 4us; 137us; 163us; 168us; 169us; 1us; 137us; 1us; 137us; 2us; 138us; 139us; 1us; 138us; 1us; 138us; 1us; 139us; 3us; 140us; 141us; 142us; 1us; 140us; 1us; 140us; 2us; 141us; 157us; 1us; 141us; 1us; 142us; 4us; 143us; 144us; 145us; 146us; 3us; 144us; 146us; 148us; 1us; 145us; 1us; 146us; 1us; 147us; 1us; 148us; 3us; 149us; 150us; 152us; 2us; 150us; 152us; 1us; 150us; 1us; 151us; 1us; 152us; 3us; 153us; 154us; 155us; 1us; 153us; 1us; 154us; 1us; 156us; 1us; 157us; 1us; 157us; 2us; 158us; 159us; 1us; 159us; 2us; 160us; 162us; 5us; 161us; 166us; 167us; 170us; 171us; 5us; 162us; 166us; 167us; 170us; 171us; 3us; 163us; 168us; 169us; 1us; 163us; 1us; 163us; 2us; 164us; 165us; 1us; 164us; 1us; 165us; 1us; 165us; 2us; 166us; 167us; 1us; 166us; 1us; 167us; 1us; 167us; 1us; 168us; 1us; 169us; 1us; 169us; 2us; 170us; 171us; 1us; 170us; 1us; 171us; 1us; 171us; 1us; 172us; 2us; 173us; 174us; 3us; 173us; 174us; 176us; 1us; 173us; 2us; 174us; 176us; 1us; 174us; 1us; 175us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 179us; 1us; 180us; 1us; 181us; 1us; 182us; 1us; 183us; 1us; 183us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 185us; 1us; 185us; 1us; 185us; 4us; 186us; 187us; 188us; 189us; 1us; 186us; 2us; 187us; 191us; 1us; 187us; 1us; 188us; 2us; 189us; 191us; 1us; 189us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 193us; 2us; 194us; 195us; 2us; 194us; 195us; 2us; 194us; 195us; 2us; 194us; 195us; 1us; 195us; 1us; 195us; 1us; 196us; 1us; 196us; 1us; 196us; 1us; 196us; 1us; 197us; 1us; 197us; 1us; 197us; 1us; 197us; 1us; 198us; 1us; 198us; 1us; 198us; 1us; 198us; 1us; 198us; 1us; 198us; 2us; 199us; 200us; 2us; 199us; 200us; 2us; 199us; 200us; 2us; 199us; 200us; 1us; 199us; 1us; 199us; 1us; 200us; 1us; 200us; 1us; 201us; 1us; 201us; 1us; 201us; 1us; 202us; 1us; 202us; 1us; 203us; 1us; 203us; 2us; 204us; 205us; 1us; 204us; 1us; 205us; 1us; 206us; 1us; 207us; 1us; 208us; 1us; 209us; 1us; 210us; 1us; 211us; 2us; 212us; 213us; 1us; 212us; 1us; 213us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 13us; 15us; 18us; 20us; 23us; 26us; 29us; 32us; 36us; 39us; 42us; 45us; 48us; 51us; 53us; 55us; 57us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 86us; 90us; 92us; 94us; 96us; 99us; 101us; 104us; 107us; 109us; 112us; 115us; 117us; 120us; 123us; 125us; 128us; 132us; 134us; 138us; 144us; 146us; 152us; 154us; 160us; 164us; 166us; 170us; 172us; 176us; 178us; 182us; 184us; 188us; 192us; 194us; 198us; 200us; 204us; 209us; 211us; 216us; 218us; 223us; 225us; 227us; 229us; 231us; 233us; 235us; 237us; 239us; 242us; 244us; 246us; 248us; 257us; 259us; 261us; 263us; 265us; 267us; 269us; 272us; 274us; 277us; 279us; 281us; 283us; 285us; 287us; 289us; 291us; 293us; 295us; 298us; 300us; 302us; 304us; 306us; 308us; 311us; 313us; 315us; 317us; 319us; 321us; 323us; 325us; 327us; 329us; 332us; 334us; 336us; 338us; 340us; 342us; 344us; 346us; 348us; 350us; 352us; 354us; 356us; 358us; 360us; 362us; 364us; 366us; 368us; 370us; 372us; 374us; 378us; 380us; 383us; 385us; 388us; 390us; 393us; 395us; 397us; 399us; 401us; 404us; 406us; 408us; 412us; 415us; 417us; 420us; 422us; 424us; 427us; 429us; 431us; 433us; 435us; 438us; 440us; 442us; 444us; 446us; 449us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 465us; 468us; 473us; 475us; 478us; 480us; 482us; 486us; 489us; 492us; 494us; 497us; 499us; 502us; 504us; 507us; 509us; 512us; 514us; 517us; 519us; 521us; 523us; 525us; 528us; 533us; 535us; 537us; 539us; 543us; 550us; 557us; 559us; 561us; 566us; 568us; 570us; 573us; 575us; 577us; 579us; 583us; 585us; 587us; 590us; 592us; 594us; 599us; 603us; 605us; 607us; 609us; 611us; 615us; 618us; 620us; 622us; 624us; 628us; 630us; 632us; 634us; 636us; 638us; 641us; 643us; 646us; 652us; 658us; 662us; 664us; 666us; 669us; 671us; 673us; 675us; 678us; 680us; 682us; 684us; 686us; 688us; 690us; 693us; 695us; 697us; 699us; 701us; 704us; 708us; 710us; 713us; 715us; 717us; 719us; 721us; 723us; 725us; 727us; 729us; 731us; 733us; 735us; 737us; 739us; 741us; 743us; 745us; 747us; 749us; 754us; 756us; 759us; 761us; 763us; 766us; 768us; 770us; 772us; 774us; 776us; 779us; 782us; 785us; 788us; 790us; 792us; 794us; 796us; 798us; 800us; 802us; 804us; 806us; 808us; 810us; 812us; 814us; 816us; 818us; 820us; 823us; 826us; 829us; 832us; 834us; 836us; 838us; 840us; 842us; 844us; 846us; 848us; 850us; 852us; 854us; 857us; 859us; 861us; 863us; 865us; 867us; 869us; 871us; 873us; 876us; 878us; |]
let _fsyacc_action_rows = 354
let _fsyacc_actionTableElements = [|19us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 0us; 49152us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 49152us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 49152us; 49us; 19us; 22us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 52us; 219us; 68us; 233us; 81us; 218us; 22us; 49152us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 52us; 219us; 68us; 233us; 81us; 218us; 0us; 16388us; 2us; 32768us; 49us; 19us; 50us; 38us; 2us; 32768us; 49us; 19us; 57us; 115us; 2us; 32768us; 49us; 19us; 53us; 130us; 2us; 32768us; 49us; 19us; 51us; 306us; 2us; 32768us; 49us; 19us; 53us; 309us; 2us; 32768us; 49us; 19us; 53us; 315us; 2us; 32768us; 49us; 19us; 53us; 319us; 2us; 32768us; 49us; 19us; 53us; 325us; 2us; 32768us; 49us; 19us; 53us; 333us; 2us; 32768us; 49us; 19us; 51us; 344us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16389us; 0us; 16390us; 11us; 16433us; 33us; 25us; 34us; 31us; 35us; 32us; 36us; 34us; 37us; 35us; 38us; 33us; 39us; 26us; 40us; 27us; 41us; 28us; 42us; 30us; 43us; 29us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 0us; 16395us; 0us; 16396us; 0us; 16397us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 2us; 16403us; 45us; 41us; 75us; 37us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16404us; 1us; 16405us; 44us; 44us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 16406us; 44us; 44us; 1us; 16407us; 72us; 47us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 16408us; 72us; 47us; 1us; 16409us; 74us; 50us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 16410us; 74us; 50us; 1us; 16411us; 71us; 53us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 16412us; 71us; 53us; 2us; 16413us; 64us; 56us; 65us; 58us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 2us; 16414us; 64us; 56us; 65us; 58us; 4us; 16415us; 60us; 61us; 61us; 63us; 62us; 65us; 63us; 67us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 4us; 16416us; 60us; 61us; 61us; 63us; 62us; 65us; 63us; 67us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 4us; 16417us; 60us; 61us; 61us; 63us; 62us; 65us; 63us; 67us; 2us; 16418us; 58us; 70us; 59us; 72us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 2us; 16419us; 58us; 70us; 59us; 72us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 2us; 16420us; 58us; 70us; 59us; 72us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 2us; 16421us; 58us; 70us; 59us; 72us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 2us; 16422us; 58us; 70us; 59us; 72us; 2us; 16423us; 66us; 75us; 67us; 77us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 2us; 16424us; 66us; 75us; 67us; 77us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 2us; 16425us; 66us; 75us; 67us; 77us; 3us; 16426us; 68us; 80us; 69us; 82us; 70us; 84us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 3us; 16427us; 68us; 80us; 69us; 82us; 70us; 84us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 3us; 16428us; 68us; 80us; 69us; 82us; 70us; 84us; 0us; 16429us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16430us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16431us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16432us; 0us; 16433us; 27us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 32768us; 53us; 89us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16434us; 6us; 16435us; 48us; 119us; 52us; 116us; 56us; 114us; 76us; 123us; 77us; 124us; 78us; 121us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 129us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16436us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 129us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16437us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16438us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 100us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16439us; 27us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 32768us; 53us; 102us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 0us; 16446us; 0us; 16447us; 2us; 32768us; 49us; 111us; 53us; 118us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16448us; 0us; 16449us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16450us; 14us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 53us; 117us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16451us; 0us; 16452us; 1us; 32768us; 81us; 120us; 0us; 16453us; 1us; 32768us; 81us; 122us; 0us; 16454us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 16457us; 50us; 287us; 0us; 16458us; 0us; 16459us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 2us; 32768us; 54us; 149us; 81us; 152us; 1us; 32768us; 81us; 159us; 2us; 32768us; 49us; 157us; 55us; 151us; 0us; 16478us; 1us; 16480us; 54us; 153us; 1us; 32768us; 81us; 159us; 2us; 32768us; 49us; 157us; 55us; 155us; 0us; 16479us; 0us; 16481us; 1us; 32768us; 81us; 159us; 0us; 16482us; 1us; 16483us; 33us; 160us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16484us; 2us; 32768us; 54us; 167us; 81us; 163us; 1us; 16487us; 54us; 164us; 14us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 15us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 55us; 166us; 0us; 16485us; 14us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 15us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 55us; 169us; 0us; 16486us; 0us; 16488us; 0us; 16489us; 4us; 32768us; 50us; 179us; 52us; 219us; 68us; 233us; 81us; 218us; 2us; 32768us; 49us; 176us; 51us; 174us; 0us; 16490us; 0us; 16491us; 4us; 32768us; 50us; 179us; 52us; 219us; 68us; 233us; 81us; 218us; 0us; 16492us; 1us; 16493us; 50us; 181us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16494us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16495us; 0us; 16496us; 0us; 16497us; 0us; 16498us; 0us; 16499us; 4us; 32768us; 51us; 189us; 52us; 219us; 68us; 233us; 81us; 218us; 4us; 32768us; 51us; 189us; 52us; 219us; 68us; 233us; 81us; 218us; 0us; 16500us; 2us; 32768us; 49us; 208us; 51us; 191us; 0us; 16501us; 0us; 16502us; 46us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 27us; 98us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 55us; 300us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 20us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 54us; 296us; 20us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 54us; 296us; 0us; 16503us; 19us; 16504us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 0us; 16505us; 19us; 16506us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 0us; 16507us; 19us; 16508us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 0us; 16509us; 14us; 16511us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 0us; 16510us; 14us; 16513us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 0us; 16512us; 0us; 16514us; 3us; 32768us; 52us; 219us; 68us; 233us; 81us; 218us; 0us; 16515us; 1us; 16516us; 33us; 212us; 21us; 16516us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 33us; 212us; 54us; 296us; 14us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 54us; 274us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16517us; 2us; 32768us; 52us; 219us; 81us; 218us; 3us; 16544us; 52us; 220us; 56us; 258us; 81us; 218us; 2us; 16518us; 52us; 227us; 56us; 223us; 2us; 16519us; 52us; 227us; 56us; 223us; 0us; 16520us; 3us; 32768us; 52us; 219us; 68us; 233us; 81us; 218us; 24us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 52us; 220us; 53us; 266us; 56us; 258us; 68us; 233us; 81us; 218us; 1us; 32768us; 53us; 222us; 0us; 16521us; 14us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 57us; 226us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 32768us; 57us; 225us; 0us; 16522us; 0us; 16523us; 21us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 53us; 232us; 81us; 247us; 1us; 32768us; 53us; 229us; 0us; 16524us; 2us; 32768us; 49us; 248us; 53us; 231us; 0us; 16525us; 0us; 16526us; 3us; 16527us; 24us; 183us; 25us; 184us; 68us; 233us; 3us; 16528us; 24us; 183us; 25us; 184us; 68us; 233us; 0us; 16529us; 0us; 16530us; 0us; 16531us; 0us; 16532us; 1us; 16533us; 49us; 240us; 20us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 47us; 241us; 0us; 16534us; 0us; 16535us; 0us; 16536us; 4us; 16539us; 52us; 220us; 56us; 258us; 68us; 233us; 81us; 218us; 0us; 16537us; 0us; 16538us; 0us; 16540us; 1us; 32768us; 81us; 249us; 0us; 16541us; 3us; 16542us; 52us; 255us; 56us; 258us; 68us; 233us; 0us; 16543us; 2us; 16544us; 52us; 255us; 56us; 258us; 2us; 16545us; 52us; 269us; 56us; 262us; 2us; 16546us; 52us; 269us; 56us; 262us; 23us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 52us; 255us; 53us; 266us; 56us; 258us; 68us; 233us; 1us; 32768us; 53us; 257us; 0us; 16547us; 14us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 57us; 259us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16548us; 1us; 32768us; 57us; 261us; 0us; 16549us; 14us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 57us; 263us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16550us; 1us; 32768us; 57us; 265us; 0us; 16551us; 0us; 16552us; 1us; 32768us; 53us; 268us; 0us; 16553us; 20us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 53us; 270us; 0us; 16554us; 1us; 32768us; 53us; 272us; 0us; 16555us; 0us; 16556us; 14us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 54us; 274us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 2us; 32768us; 49us; 277us; 55us; 276us; 0us; 16557us; 15us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 54us; 274us; 55us; 278us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16558us; 0us; 16559us; 0us; 16560us; 0us; 16561us; 0us; 16562us; 0us; 16563us; 0us; 16564us; 0us; 16565us; 0us; 16566us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16567us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 32768us; 50us; 291us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16568us; 1us; 32768us; 50us; 294us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16569us; 46us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 27us; 98us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 55us; 297us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16570us; 27us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 55us; 299us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16571us; 0us; 16572us; 27us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 55us; 302us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16573us; 0us; 16574us; 0us; 16575us; 0us; 16576us; 0us; 16577us; 1us; 32768us; 52us; 308us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 1us; 16578us; 4us; 311us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16579us; 1us; 32768us; 52us; 314us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16580us; 1us; 32768us; 52us; 318us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16581us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 1us; 32768us; 6us; 323us; 1us; 32768us; 52us; 324us; 13us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 1us; 32768us; 51us; 326us; 0us; 16582us; 1us; 32768us; 52us; 328us; 14us; 32768us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 14us; 32768us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 14us; 32768us; 27us; 98us; 46us; 108us; 52us; 87us; 53us; 331us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16583us; 26us; 32768us; 1us; 289us; 2us; 293us; 3us; 307us; 5us; 313us; 6us; 317us; 7us; 321us; 8us; 327us; 9us; 335us; 10us; 338us; 11us; 340us; 12us; 342us; 27us; 98us; 46us; 108us; 51us; 305us; 52us; 87us; 54us; 296us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 126us; 0us; 16584us; 1us; 32768us; 81us; 336us; 1us; 32768us; 51us; 337us; 0us; 16585us; 1us; 32768us; 51us; 339us; 0us; 16586us; 1us; 32768us; 51us; 341us; 0us; 16587us; 14us; 32768us; 27us; 98us; 46us; 108us; 51us; 343us; 52us; 87us; 66us; 105us; 67us; 106us; 68us; 104us; 71us; 103us; 73us; 107us; 76us; 92us; 77us; 94us; 79us; 128us; 80us; 127us; 81us; 125us; 0us; 16588us; 0us; 16589us; 0us; 16590us; 0us; 16591us; 0us; 16592us; 0us; 16593us; 0us; 16594us; 0us; 16595us; 20us; 32768us; 13us; 185us; 14us; 186us; 15us; 148us; 16us; 138us; 17us; 139us; 18us; 140us; 19us; 141us; 20us; 144us; 21us; 145us; 22us; 142us; 23us; 143us; 24us; 183us; 25us; 184us; 26us; 137us; 28us; 132us; 29us; 133us; 30us; 134us; 31us; 135us; 32us; 136us; 54us; 296us; 0us; 16596us; 0us; 16597us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 20us; 21us; 48us; 49us; 63us; 65us; 88us; 111us; 112us; 115us; 118us; 121us; 124us; 127us; 130us; 133us; 136us; 139us; 142us; 156us; 157us; 158us; 170us; 184us; 185us; 186us; 187us; 188us; 189us; 190us; 191us; 192us; 193us; 194us; 195us; 196us; 199us; 213us; 227us; 228us; 230us; 244us; 246us; 248us; 262us; 264us; 266us; 280us; 282us; 284us; 298us; 300us; 303us; 317us; 320us; 325us; 339us; 344us; 358us; 363us; 366us; 380us; 383us; 397us; 400us; 414us; 417us; 431us; 434us; 437us; 451us; 454us; 468us; 471us; 475us; 489us; 493us; 507us; 511us; 512us; 526us; 527us; 541us; 542us; 556us; 557us; 558us; 586us; 588us; 602us; 603us; 610us; 624us; 625us; 639us; 640us; 654us; 655us; 669us; 670us; 698us; 700us; 701us; 702us; 703us; 704us; 705us; 706us; 707us; 708us; 711us; 725us; 726us; 727us; 741us; 742us; 757us; 758us; 759us; 761us; 762us; 764us; 765us; 766us; 767us; 768us; 770us; 771us; 772us; 786us; 787us; 788us; 789us; 790us; 791us; 792us; 793us; 794us; 795us; 796us; 797us; 798us; 799us; 800us; 801us; 802us; 803us; 804us; 807us; 809us; 812us; 813us; 815us; 817us; 820us; 821us; 822us; 824us; 825us; 827us; 841us; 842us; 845us; 847us; 862us; 878us; 879us; 894us; 910us; 911us; 912us; 913us; 918us; 921us; 922us; 923us; 928us; 929us; 931us; 945us; 946us; 960us; 961us; 962us; 963us; 964us; 965us; 970us; 975us; 976us; 979us; 980us; 981us; 1028us; 1049us; 1070us; 1071us; 1091us; 1092us; 1112us; 1113us; 1133us; 1134us; 1149us; 1150us; 1165us; 1166us; 1167us; 1171us; 1172us; 1174us; 1196us; 1211us; 1212us; 1215us; 1219us; 1222us; 1225us; 1226us; 1230us; 1255us; 1257us; 1258us; 1273us; 1275us; 1276us; 1277us; 1299us; 1301us; 1302us; 1305us; 1306us; 1307us; 1311us; 1315us; 1316us; 1317us; 1318us; 1319us; 1321us; 1342us; 1343us; 1344us; 1345us; 1350us; 1351us; 1352us; 1353us; 1355us; 1356us; 1360us; 1361us; 1364us; 1367us; 1370us; 1394us; 1396us; 1397us; 1412us; 1413us; 1415us; 1416us; 1431us; 1432us; 1434us; 1435us; 1436us; 1438us; 1439us; 1460us; 1461us; 1463us; 1464us; 1465us; 1480us; 1483us; 1484us; 1500us; 1501us; 1502us; 1503us; 1504us; 1505us; 1506us; 1507us; 1508us; 1509us; 1536us; 1537us; 1551us; 1553us; 1580us; 1581us; 1583us; 1610us; 1611us; 1658us; 1659us; 1687us; 1688us; 1689us; 1717us; 1718us; 1719us; 1720us; 1721us; 1722us; 1724us; 1738us; 1765us; 1767us; 1794us; 1795us; 1797us; 1811us; 1838us; 1839us; 1841us; 1855us; 1882us; 1883us; 1910us; 1912us; 1914us; 1928us; 1930us; 1931us; 1933us; 1948us; 1963us; 1978us; 2005us; 2006us; 2033us; 2034us; 2036us; 2038us; 2039us; 2041us; 2042us; 2044us; 2045us; 2060us; 2061us; 2062us; 2063us; 2064us; 2065us; 2066us; 2067us; 2068us; 2089us; 2090us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 5us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 1us; 4us; 1us; 2us; 2us; 2us; 2us; 4us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 4us; 3us; 4us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 4us; 5us; 2us; 1us; 3us; 1us; 3us; 5us; 4us; 2us; 1us; 2us; 3us; 1us; 3us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 2us; 3us; 1us; 2us; 1us; 2us; 1us; 2us; 1us; 2us; 2us; 1us; 2us; 1us; 1us; 3us; 1us; 3us; 2us; 1us; 1us; 3us; 4us; 3us; 4us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 1us; 3us; 1us; 3us; 2us; 2us; 1us; 1us; 3us; 1us; 2us; 1us; 1us; 2us; 3us; 2us; 3us; 3us; 4us; 2us; 3us; 3us; 4us; 1us; 3us; 4us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 4us; 3us; 2us; 3us; 3us; 4us; 1us; 2us; 1us; 2us; 5us; 7us; 5us; 5us; 7us; 6us; 7us; 3us; 2us; 2us; 2us; 3us; 1us; 2us; 1us; 1us; 4us; 3us; 3us; 2us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 4us; 5us; 5us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 10us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 14us; 14us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 22us; 22us; 22us; 22us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 25us; 25us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 27us; 27us; 28us; 28us; 29us; 29us; 30us; 30us; 30us; 31us; 31us; 32us; 33us; 33us; 34us; 34us; 34us; 35us; 35us; 36us; 36us; 37us; 37us; 38us; 38us; 39us; 39us; 39us; 39us; 39us; 39us; 40us; 40us; 40us; 40us; 41us; 41us; 42us; 42us; 43us; 43us; 44us; 44us; 44us; 44us; 44us; 44us; 44us; 45us; 45us; 45us; 45us; 46us; 46us; 47us; 47us; 48us; 48us; 49us; 49us; 49us; 50us; 50us; 51us; 51us; 52us; 52us; 52us; 53us; 53us; 53us; 53us; 53us; 53us; 53us; 53us; 53us; 54us; 54us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 57us; 58us; 58us; 58us; 58us; 59us; 59us; 60us; 60us; 61us; 61us; 61us; 62us; 62us; 62us; 62us; 63us; 63us; 63us; 63us; 63us; 64us; 64us; 65us; 65us; 66us; 66us; 66us; 66us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 65535us; 65535us; 65535us; 16388us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16389us; 16390us; 65535us; 65535us; 16391us; 16392us; 16393us; 16394us; 16395us; 16396us; 16397us; 16398us; 16399us; 16400us; 16401us; 16402us; 65535us; 65535us; 65535us; 16404us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 16430us; 65535us; 16431us; 65535us; 16432us; 16433us; 65535us; 65535us; 65535us; 16434us; 65535us; 65535us; 16436us; 65535us; 16437us; 65535us; 16438us; 65535us; 16439us; 65535us; 65535us; 16440us; 16441us; 16442us; 16443us; 16444us; 16445us; 16446us; 16447us; 65535us; 65535us; 16448us; 16449us; 65535us; 16450us; 65535us; 16451us; 16452us; 65535us; 16453us; 65535us; 16454us; 16455us; 16456us; 16457us; 65535us; 16458us; 16459us; 65535us; 16460us; 16461us; 16462us; 16463us; 16464us; 16465us; 16466us; 16467us; 16468us; 16469us; 16470us; 16471us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; 65535us; 65535us; 65535us; 16478us; 65535us; 65535us; 65535us; 16479us; 16481us; 65535us; 16482us; 65535us; 65535us; 16484us; 65535us; 65535us; 65535us; 65535us; 16485us; 65535us; 65535us; 16486us; 16488us; 16489us; 65535us; 65535us; 16490us; 16491us; 65535us; 16492us; 65535us; 65535us; 16494us; 65535us; 16495us; 16496us; 16497us; 16498us; 16499us; 65535us; 65535us; 16500us; 65535us; 16501us; 16502us; 65535us; 65535us; 65535us; 16503us; 65535us; 16505us; 65535us; 16507us; 65535us; 16509us; 65535us; 16510us; 65535us; 16512us; 16514us; 65535us; 16515us; 65535us; 65535us; 65535us; 16517us; 65535us; 65535us; 65535us; 65535us; 16520us; 65535us; 65535us; 65535us; 16521us; 65535us; 65535us; 16522us; 16523us; 65535us; 65535us; 16524us; 65535us; 16525us; 16526us; 65535us; 65535us; 16529us; 16530us; 16531us; 16532us; 65535us; 65535us; 16534us; 16535us; 16536us; 65535us; 16537us; 16538us; 16540us; 65535us; 16541us; 65535us; 16543us; 65535us; 65535us; 65535us; 65535us; 65535us; 16547us; 65535us; 16548us; 65535us; 16549us; 65535us; 16550us; 65535us; 16551us; 16552us; 65535us; 16553us; 65535us; 16554us; 65535us; 16555us; 16556us; 65535us; 65535us; 16557us; 65535us; 16558us; 16559us; 16560us; 16561us; 16562us; 16563us; 16564us; 16565us; 16566us; 65535us; 16567us; 65535us; 65535us; 65535us; 16568us; 65535us; 65535us; 16569us; 65535us; 16570us; 65535us; 16571us; 16572us; 65535us; 16573us; 16574us; 16575us; 16576us; 16577us; 65535us; 65535us; 65535us; 65535us; 65535us; 16579us; 65535us; 65535us; 65535us; 16580us; 65535us; 65535us; 65535us; 16581us; 65535us; 65535us; 65535us; 65535us; 65535us; 16582us; 65535us; 65535us; 65535us; 65535us; 65535us; 16583us; 65535us; 16584us; 65535us; 65535us; 16585us; 65535us; 16586us; 65535us; 16587us; 65535us; 16588us; 16589us; 16590us; 16591us; 16592us; 16593us; 16594us; 16595us; 65535us; 16596us; 16597us; |]
let _fsyacc_reductions ()  =    [| 
# 848 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : DeclarationBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startdeclaration));
# 857 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startStatement));
# 866 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startexpression));
# 875 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : TranslationUnit)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttranslation_unit));
# 884 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'assignment_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "C\Ansi\Parser.fsy"
                                                                               _1 
                   )
# 83 "C\Ansi\Parser.fsy"
                 : ExpressionBase));
# 895 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'assignment_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "C\Ansi\Parser.fsy"
                                                                               
                                 match (_1 : ExpressionBase) with
                                 | :? ExpressionList -> 
                                     (_1 :?> ExpressionList).Add(_3)
                                     _1 
                                 | _ -> 
                                     let result = ExpressionList()
                                     result.Add(_1)
                                     result.Add(_3)
                                     result :> ExpressionBase
                             
                   )
# 84 "C\Ansi\Parser.fsy"
                 : ExpressionBase));
# 917 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conditional_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 97 "C\Ansi\Parser.fsy"
                 : 'assignment_expression));
# 928 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unary_expression)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'assignment_operator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'assignment_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "C\Ansi\Parser.fsy"
                                                                                         BinaryExpression(_1, _2, _3) :> ExpressionBase 
                   )
# 98 "C\Ansi\Parser.fsy"
                 : 'assignment_expression));
# 941 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.Assign 
                   )
# 102 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 951 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignMultiply 
                   )
# 103 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 961 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignDivide 
                   )
# 104 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 971 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignModulo 
                   )
# 105 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 981 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignAdd 
                   )
# 106 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 991 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignSubtract 
                   )
# 107 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 1001 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignShiftLeft 
                   )
# 108 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 1011 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignShiftRight 
                   )
# 109 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 1021 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignAnd 
                   )
# 110 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 1031 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignXor 
                   )
# 111 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 1041 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "C\Ansi\Parser.fsy"
                                                   BinaryOperator.AssignOr 
                   )
# 112 "C\Ansi\Parser.fsy"
                 : 'assignment_operator));
# 1051 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logical_or_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 115 "C\Ansi\Parser.fsy"
                 : 'conditional_expression));
# 1062 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logical_or_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'conditional_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "C\Ansi\Parser.fsy"
                                                                                                       TetrnaryExpression(_1, _3, _5) :> ExpressionBase 
                   )
# 116 "C\Ansi\Parser.fsy"
                 : 'conditional_expression));
# 1075 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logical_and_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 119 "C\Ansi\Parser.fsy"
                 : 'logical_or_expression));
# 1086 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logical_or_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'logical_and_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "C\Ansi\Parser.fsy"
                                                                                        BinaryExpression(_1, BinaryOperator.LogicalOr, _3) :> ExpressionBase 
                   )
# 120 "C\Ansi\Parser.fsy"
                 : 'logical_or_expression));
# 1098 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inclusive_or_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 123 "C\Ansi\Parser.fsy"
                 : 'logical_and_expression));
# 1109 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'logical_and_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inclusive_or_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "C\Ansi\Parser.fsy"
                                                                                           BinaryExpression(_1, BinaryOperator.LogicalAnd, _3) :> ExpressionBase 
                   )
# 124 "C\Ansi\Parser.fsy"
                 : 'logical_and_expression));
# 1121 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exclusive_or_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 127 "C\Ansi\Parser.fsy"
                 : 'inclusive_or_expression));
# 1132 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inclusive_or_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exclusive_or_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.Or, _3) :> ExpressionBase 
                   )
# 128 "C\Ansi\Parser.fsy"
                 : 'inclusive_or_expression));
# 1144 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'and_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 131 "C\Ansi\Parser.fsy"
                 : 'exclusive_or_expression));
# 1155 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exclusive_or_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'and_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.Xor, _3) :> ExpressionBase 
                   )
# 132 "C\Ansi\Parser.fsy"
                 : 'exclusive_or_expression));
# 1167 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'equality_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 135 "C\Ansi\Parser.fsy"
                 : 'and_expression));
# 1178 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'and_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'equality_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.And, _3) :> ExpressionBase 
                   )
# 136 "C\Ansi\Parser.fsy"
                 : 'and_expression));
# 1190 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'relational_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 139 "C\Ansi\Parser.fsy"
                 : 'equality_expression));
# 1201 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'equality_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'relational_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.Equal, _3) :> ExpressionBase 
                   )
# 140 "C\Ansi\Parser.fsy"
                 : 'equality_expression));
# 1213 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'equality_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'relational_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.NotEqual, _3) :> ExpressionBase 
                   )
# 141 "C\Ansi\Parser.fsy"
                 : 'equality_expression));
# 1225 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'shift_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 144 "C\Ansi\Parser.fsy"
                 : 'relational_expression));
# 1236 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'relational_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'shift_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.LessThan, _3) :> ExpressionBase 
                   )
# 145 "C\Ansi\Parser.fsy"
                 : 'relational_expression));
# 1248 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'relational_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'shift_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.GreaterThan, _3) :> ExpressionBase 
                   )
# 146 "C\Ansi\Parser.fsy"
                 : 'relational_expression));
# 1260 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'relational_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'shift_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.LessOrEqual, _3) :> ExpressionBase 
                   )
# 147 "C\Ansi\Parser.fsy"
                 : 'relational_expression));
# 1272 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'relational_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'shift_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.GreaterOrEqual, _3) :> ExpressionBase 
                   )
# 148 "C\Ansi\Parser.fsy"
                 : 'relational_expression));
# 1284 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'additive_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 151 "C\Ansi\Parser.fsy"
                 : 'shift_expression));
# 1295 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'shift_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'additive_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.ShiftLeft, _3) :> ExpressionBase 
                   )
# 152 "C\Ansi\Parser.fsy"
                 : 'shift_expression));
# 1307 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'shift_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'additive_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.ShiftRight, _3) :> ExpressionBase 
                   )
# 153 "C\Ansi\Parser.fsy"
                 : 'shift_expression));
# 1319 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'multiplicative_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 156 "C\Ansi\Parser.fsy"
                 : 'additive_expression));
# 1330 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'additive_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'multiplicative_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.Add, _3) :> ExpressionBase 
                   )
# 157 "C\Ansi\Parser.fsy"
                 : 'additive_expression));
# 1342 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'additive_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'multiplicative_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.Subtract, _3) :> ExpressionBase 
                   )
# 158 "C\Ansi\Parser.fsy"
                 : 'additive_expression));
# 1354 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cast_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 161 "C\Ansi\Parser.fsy"
                 : 'multiplicative_expression));
# 1365 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'multiplicative_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cast_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.Multiply, _3) :> ExpressionBase 
                   )
# 162 "C\Ansi\Parser.fsy"
                 : 'multiplicative_expression));
# 1377 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'multiplicative_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cast_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.Divide, _3) :> ExpressionBase 
                   )
# 163 "C\Ansi\Parser.fsy"
                 : 'multiplicative_expression));
# 1389 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'multiplicative_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cast_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "C\Ansi\Parser.fsy"
                                                                                   BinaryExpression(_1, BinaryOperator.Modulo, _3) :> ExpressionBase 
                   )
# 164 "C\Ansi\Parser.fsy"
                 : 'multiplicative_expression));
# 1401 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unary_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "C\Ansi\Parser.fsy"
                                                                                   _1 
                   )
# 167 "C\Ansi\Parser.fsy"
                 : 'cast_expression));
# 1412 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_name)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'cast_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "C\Ansi\Parser.fsy"
                                                                                       CastExpression(_2, _4) :> ExpressionBase 
                   )
# 168 "C\Ansi\Parser.fsy"
                 : 'cast_expression));
# 1424 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfix_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "C\Ansi\Parser.fsy"
                                                                               _1 
                   )
# 171 "C\Ansi\Parser.fsy"
                 : 'unary_expression));
# 1435 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'unary_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "C\Ansi\Parser.fsy"
                                                                               UnaryExpression(_2, UnaryOperator.PrefixIncrement) :> ExpressionBase 
                   )
# 172 "C\Ansi\Parser.fsy"
                 : 'unary_expression));
# 1446 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'unary_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "C\Ansi\Parser.fsy"
                                                                               UnaryExpression(_2, UnaryOperator.PrefixDecrement) :> ExpressionBase 
                   )
# 173 "C\Ansi\Parser.fsy"
                 : 'unary_expression));
# 1457 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unary_operator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cast_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "C\Ansi\Parser.fsy"
                                                                               UnaryExpression(_2, _1) :> ExpressionBase 
                   )
# 174 "C\Ansi\Parser.fsy"
                 : 'unary_expression));
# 1469 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'unary_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "C\Ansi\Parser.fsy"
                                                                               UnaryExpression(_2, UnaryOperator.Sizeof) :> ExpressionBase 
                   )
# 175 "C\Ansi\Parser.fsy"
                 : 'unary_expression));
# 1480 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_name)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "C\Ansi\Parser.fsy"
                                                                               SizeofExpression(_3) :> ExpressionBase 
                   )
# 176 "C\Ansi\Parser.fsy"
                 : 'unary_expression));
# 1491 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "C\Ansi\Parser.fsy"
                                               UnaryOperator.AddressOf 
                   )
# 179 "C\Ansi\Parser.fsy"
                 : 'unary_operator));
# 1501 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "C\Ansi\Parser.fsy"
                                               UnaryOperator.Indirection 
                   )
# 180 "C\Ansi\Parser.fsy"
                 : 'unary_operator));
# 1511 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "C\Ansi\Parser.fsy"
                                               UnaryOperator.Plus 
                   )
# 181 "C\Ansi\Parser.fsy"
                 : 'unary_operator));
# 1521 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "C\Ansi\Parser.fsy"
                                               UnaryOperator.Minus 
                   )
# 182 "C\Ansi\Parser.fsy"
                 : 'unary_operator));
# 1531 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "C\Ansi\Parser.fsy"
                                               UnaryOperator.Not 
                   )
# 183 "C\Ansi\Parser.fsy"
                 : 'unary_operator));
# 1541 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "C\Ansi\Parser.fsy"
                                               UnaryOperator.LogicalNot 
                   )
# 184 "C\Ansi\Parser.fsy"
                 : 'unary_operator));
# 1551 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'assignment_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "C\Ansi\Parser.fsy"
                                                                                   CreateListWithElement(_1) 
                   )
# 187 "C\Ansi\Parser.fsy"
                 : 'argument_expression_list));
# 1562 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'argument_expression_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'assignment_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "C\Ansi\Parser.fsy"
                                                                                   AddElement(_1, _3) 
                   )
# 188 "C\Ansi\Parser.fsy"
                 : 'argument_expression_list));
# 1574 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'primary_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "C\Ansi\Parser.fsy"
                                                                                                           _1 
                   )
# 191 "C\Ansi\Parser.fsy"
                 : 'postfix_expression));
# 1585 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfix_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "C\Ansi\Parser.fsy"
                                                                                                           ArrayExpression(_1, _3) :> ExpressionBase 
                   )
# 192 "C\Ansi\Parser.fsy"
                 : 'postfix_expression));
# 1597 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfix_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "C\Ansi\Parser.fsy"
                                                                                                           FunctionCallExpression(_1, null) :> ExpressionBase 
                   )
# 193 "C\Ansi\Parser.fsy"
                 : 'postfix_expression));
# 1608 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfix_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'argument_expression_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "C\Ansi\Parser.fsy"
                                                                                                           FunctionCallExpression(_1, _3) :> ExpressionBase 
                   )
# 194 "C\Ansi\Parser.fsy"
                 : 'postfix_expression));
# 1620 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfix_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "C\Ansi\Parser.fsy"
                                                                                                           MemberDotExpression(_1, IdentifierExpression(_3)) :> ExpressionBase 
                   )
# 195 "C\Ansi\Parser.fsy"
                 : 'postfix_expression));
# 1632 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfix_expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "C\Ansi\Parser.fsy"
                                                                                                           MemberPtrExpression(_1, IdentifierExpression(_3)) :> ExpressionBase 
                   )
# 196 "C\Ansi\Parser.fsy"
                 : 'postfix_expression));
# 1644 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfix_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "C\Ansi\Parser.fsy"
                                                                                                           UnaryExpression(_1, UnaryOperator.PostfixIncrement) :> ExpressionBase 
                   )
# 197 "C\Ansi\Parser.fsy"
                 : 'postfix_expression));
# 1655 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfix_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "C\Ansi\Parser.fsy"
                                                                                                           UnaryExpression(_1, UnaryOperator.PostfixDecrement) :> ExpressionBase 
                   )
# 198 "C\Ansi\Parser.fsy"
                 : 'postfix_expression));
# 1666 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "C\Ansi\Parser.fsy"
                                                                        IdentifierExpression(_1) :> ExpressionBase 
                   )
# 201 "C\Ansi\Parser.fsy"
                 : 'primary_expression));
# 1677 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "C\Ansi\Parser.fsy"
                                                                        ConstantExpression(_1) :> ExpressionBase 
                   )
# 202 "C\Ansi\Parser.fsy"
                 : 'primary_expression));
# 1688 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "C\Ansi\Parser.fsy"
                                                                        
                             let wide = (_1.[0] = 'L')
                             let mutable text = _1
                             text <- text.Substring(0, text.Length - 1);
                             text <- text.Substring(if wide then 2 else 1)
                             StringLiteralExpression(text, wide) :> ExpressionBase 
                         
                   )
# 203 "C\Ansi\Parser.fsy"
                 : 'primary_expression));
# 1705 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "C\Ansi\Parser.fsy"
                                                                        _2 
                   )
# 210 "C\Ansi\Parser.fsy"
                 : 'primary_expression));
# 1716 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conditional_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "C\Ansi\Parser.fsy"
                                                                               _1 
                   )
# 213 "C\Ansi\Parser.fsy"
                 : 'constant_expression));
# 1727 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "C\Ansi\Parser.fsy"
                                                       StorageClassSpecifier(StorageClass.Typedef) :> SpecifierBase 
                   )
# 216 "C\Ansi\Parser.fsy"
                 : 'storage_class_Specifier));
# 1737 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "C\Ansi\Parser.fsy"
                                                       StorageClassSpecifier(StorageClass.Extern) :> SpecifierBase 
                   )
# 217 "C\Ansi\Parser.fsy"
                 : 'storage_class_Specifier));
# 1747 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "C\Ansi\Parser.fsy"
                                                       StorageClassSpecifier(StorageClass.Static) :> SpecifierBase 
                   )
# 218 "C\Ansi\Parser.fsy"
                 : 'storage_class_Specifier));
# 1757 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "C\Ansi\Parser.fsy"
                                                       StorageClassSpecifier(StorageClass.Auto) :> SpecifierBase 
                   )
# 219 "C\Ansi\Parser.fsy"
                 : 'storage_class_Specifier));
# 1767 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "C\Ansi\Parser.fsy"
                                                       StorageClassSpecifier(StorageClass.Register) :> SpecifierBase 
                   )
# 220 "C\Ansi\Parser.fsy"
                 : 'storage_class_Specifier));
# 1777 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Void) :> SpecifierBase 
                   )
# 223 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1787 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Char) :> SpecifierBase 
                   )
# 224 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1797 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Short) :> SpecifierBase 
                   )
# 225 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1807 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Int) :> SpecifierBase 
                   )
# 226 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1817 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Long) :> SpecifierBase 
                   )
# 227 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1827 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Float) :> SpecifierBase 
                   )
# 228 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1837 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Double) :> SpecifierBase 
                   )
# 229 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1847 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Signed) :> SpecifierBase 
                   )
# 230 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1857 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "C\Ansi\Parser.fsy"
                                                           StandardTypeSpecifier(TypeSpecifier.Unsigned) :> SpecifierBase 
                   )
# 231 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1867 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_or_union_Specifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "C\Ansi\Parser.fsy"
                                                           _1 
                   )
# 232 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1878 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'enum_Specifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "C\Ansi\Parser.fsy"
                                                           _1 
                   )
# 233 "C\Ansi\Parser.fsy"
                 : 'type_Specifier));
# 1889 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'enumerator_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "C\Ansi\Parser.fsy"
                                                                                               EnumSpecifier(null, _3) :> SpecifierBase 
                   )
# 236 "C\Ansi\Parser.fsy"
                 : 'enum_Specifier));
# 1900 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'enumerator_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "C\Ansi\Parser.fsy"
                                                                                               EnumSpecifier(_2, _4) :> SpecifierBase 
                   )
# 237 "C\Ansi\Parser.fsy"
                 : 'enum_Specifier));
# 1912 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "C\Ansi\Parser.fsy"
                                                                                               EnumSpecifier(_2, null) :> SpecifierBase 
                   )
# 238 "C\Ansi\Parser.fsy"
                 : 'enum_Specifier));
# 1923 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'enumerator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "C\Ansi\Parser.fsy"
                                                                   
                                 (_1 : Enumerator )
                                 let list = new System.Collections.Generic.List<EnumeratorBase>()
                                 list.Add(_1)
                                 list
                             
                   )
# 241 "C\Ansi\Parser.fsy"
                 : 'enumerator_list));
# 1939 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'enumerator_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'enumerator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "C\Ansi\Parser.fsy"
                                                                   
                                 _1.Add(_3) 
                                 _1
                             
                   )
# 247 "C\Ansi\Parser.fsy"
                 : 'enumerator_list));
# 1954 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "C\Ansi\Parser.fsy"
                                                                   Enumerator(_1, null) 
                   )
# 253 "C\Ansi\Parser.fsy"
                 : 'enumerator));
# 1965 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "C\Ansi\Parser.fsy"
                                                                   Enumerator(_1, _3) 
                   )
# 254 "C\Ansi\Parser.fsy"
                 : 'enumerator));
# 1977 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_or_union)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declaration_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "C\Ansi\Parser.fsy"
                                                                                                                   StructureSpecifier(_1, _2, _4) :> SpecifierBase 
                   )
# 258 "C\Ansi\Parser.fsy"
                 : 'struct_or_union_Specifier));
# 1990 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_or_union)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declaration_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "C\Ansi\Parser.fsy"
                                                                                                                   StructureSpecifier(_1, null, _3) :> SpecifierBase 
                   )
# 259 "C\Ansi\Parser.fsy"
                 : 'struct_or_union_Specifier));
# 2002 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_or_union)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "C\Ansi\Parser.fsy"
                                                                                                                   StructureSpecifier(_1, _2, null) :> SpecifierBase 
                   )
# 260 "C\Ansi\Parser.fsy"
                 : 'struct_or_union_Specifier));
# 2014 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declaration)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "C\Ansi\Parser.fsy"
                                                                                                                   CreateListWithElement(_1) 
                   )
# 264 "C\Ansi\Parser.fsy"
                 : 'struct_declaration_list));
# 2025 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declaration_list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declaration)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "C\Ansi\Parser.fsy"
                                                                                                                   AddElement(_1, _2) 
                   )
# 265 "C\Ansi\Parser.fsy"
                 : 'struct_declaration_list));
# 2037 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specifier_qualifier_list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declarator_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "C\Ansi\Parser.fsy"
                                                                                                                   VariableDeclaration(_1, _2) :> DeclarationBase 
                   )
# 269 "C\Ansi\Parser.fsy"
                 : 'struct_declaration));
# 2049 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "C\Ansi\Parser.fsy"
                                                                                                                   
                                 let list = new System.Collections.Generic.List<DeclaratorBase>()
                                 list.Add(_1)
                                 list
                             
                   )
# 273 "C\Ansi\Parser.fsy"
                 : 'struct_declarator_list));
# 2064 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declarator_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'struct_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 "C\Ansi\Parser.fsy"
                                                                                                                   AddElement(_1, _3) 
                   )
# 278 "C\Ansi\Parser.fsy"
                 : 'struct_declarator_list));
# 2076 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "C\Ansi\Parser.fsy"
                                                                                           StructureDeclarator(_1, null) :> DeclaratorBase 
                   )
# 281 "C\Ansi\Parser.fsy"
                 : 'struct_declarator));
# 2087 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "C\Ansi\Parser.fsy"
                                                                                           StructureDeclarator(null, _2) :> DeclaratorBase 
                   )
# 282 "C\Ansi\Parser.fsy"
                 : 'struct_declarator));
# 2098 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 "C\Ansi\Parser.fsy"
                                                                                           StructureDeclarator(_1, _3) :> DeclaratorBase 
                   )
# 283 "C\Ansi\Parser.fsy"
                 : 'struct_declarator));
# 2110 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 "C\Ansi\Parser.fsy"
                                                                   TypeQualificationSpecifier(TypeQualifier.Const) :> SpecifierBase 
                   )
# 287 "C\Ansi\Parser.fsy"
                 : 'type_qualifier));
# 2120 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 288 "C\Ansi\Parser.fsy"
                                                                   TypeQualificationSpecifier(TypeQualifier.Volatile) :> SpecifierBase 
                   )
# 288 "C\Ansi\Parser.fsy"
                 : 'type_qualifier));
# 2130 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 "C\Ansi\Parser.fsy"
                                                           StructureType.Struct 
                   )
# 292 "C\Ansi\Parser.fsy"
                 : 'struct_or_union));
# 2140 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 293 "C\Ansi\Parser.fsy"
                                                           StructureType.Union 
                   )
# 293 "C\Ansi\Parser.fsy"
                 : 'struct_or_union));
# 2150 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 "C\Ansi\Parser.fsy"
                                                                                   VariableDeclaration(_1, null) :> DeclarationBase 
                   )
# 297 "C\Ansi\Parser.fsy"
                 : DeclarationBase));
# 2161 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'init_declarator_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "C\Ansi\Parser.fsy"
                                                                                   VariableDeclaration(_1, _2) :> DeclarationBase 
                   )
# 298 "C\Ansi\Parser.fsy"
                 : DeclarationBase));
# 2173 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : DeclarationBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 "C\Ansi\Parser.fsy"
                                                              
                                 let list = new System.Collections.Generic.List<DeclarationBase>()
                                 list.Add(_1)
                                 list
                             
                   )
# 302 "C\Ansi\Parser.fsy"
                 : 'declaration_list));
# 2188 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : DeclarationBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 307 "C\Ansi\Parser.fsy"
                                                              
                                 _1.Add(_2) 
                                 _1
                             
                   )
# 307 "C\Ansi\Parser.fsy"
                 : 'declaration_list));
# 2203 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_class_Specifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 "C\Ansi\Parser.fsy"
                                                                               _1 
                   )
# 314 "C\Ansi\Parser.fsy"
                 : 'declaration_Specifiers));
# 2214 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'storage_class_Specifier)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 315 "C\Ansi\Parser.fsy"
                                                                              
                                 match (_2 : SpecifierBase) with
                                 | :? SpecifierList -> 
                                     (_2 :?> SpecifierList).Insert(0, _1)
                                     _2 
                                 | _ -> 
                                     let result = new SpecifierList()
                                     result.Add(_1)
                                     result.Add(_2)
                                     result :> SpecifierBase
                             
                   )
# 315 "C\Ansi\Parser.fsy"
                 : 'declaration_Specifiers));
# 2236 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_Specifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 "C\Ansi\Parser.fsy"
                                                                               _1 
                   )
# 326 "C\Ansi\Parser.fsy"
                 : 'declaration_Specifiers));
# 2247 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_Specifier)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 "C\Ansi\Parser.fsy"
                                                                              
                                 match (_2 : SpecifierBase) with
                                 | :? SpecifierList -> 
                                     (_2 :?> SpecifierList).Insert(0, _1)
                                     _2 
                                 | _ -> 
                                     let result = new SpecifierList()
                                     result.Add(_1)
                                     result.Add(_2)
                                     result :> SpecifierBase
                             
                   )
# 327 "C\Ansi\Parser.fsy"
                 : 'declaration_Specifiers));
# 2269 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 "C\Ansi\Parser.fsy"
                                                                               _1 
                   )
# 338 "C\Ansi\Parser.fsy"
                 : 'declaration_Specifiers));
# 2280 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 339 "C\Ansi\Parser.fsy"
                                                                              
                                 match (_2 : SpecifierBase) with
                                 | :? SpecifierList -> 
                                     (_2 :?> SpecifierList).Insert(0, _1)
                                     _2 
                                 | _ -> 
                                     let result = new SpecifierList()
                                     result.Add(_1)
                                     result.Add(_2)
                                     result :> SpecifierBase
                             
                   )
# 339 "C\Ansi\Parser.fsy"
                 : 'declaration_Specifiers));
# 2302 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_Specifier)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specifier_qualifier_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 353 "C\Ansi\Parser.fsy"
                                                                                
                                 match (_2 : SpecifierBase) with
                                 | :? SpecifierList -> 
                                     (_2 :?> SpecifierList).Insert(0, _1)
                                     _2 
                                 | _ -> 
                                     let result = new SpecifierList()
                                     result.Add(_1)
                                     result.Add(_2)
                                     result :> SpecifierBase
                             
                   )
# 353 "C\Ansi\Parser.fsy"
                 : 'Specifier_qualifier_list));
# 2324 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_Specifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 364 "C\Ansi\Parser.fsy"
                                                                               _1 
                   )
# 364 "C\Ansi\Parser.fsy"
                 : 'Specifier_qualifier_list));
# 2335 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specifier_qualifier_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 365 "C\Ansi\Parser.fsy"
                                                                                
                                 match (_2 : SpecifierBase) with
                                 | :? SpecifierList -> 
                                     (_2 :?> SpecifierList).Insert(0, _1)
                                     _2 
                                 | _ -> 
                                     let resutl = new SpecifierList()
                                     resutl.Add(_1)
                                     resutl.Add(_2)
                                     resutl :> SpecifierBase
                             
                   )
# 365 "C\Ansi\Parser.fsy"
                 : 'Specifier_qualifier_list));
# 2357 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 376 "C\Ansi\Parser.fsy"
                                                                               _1 
                   )
# 376 "C\Ansi\Parser.fsy"
                 : 'Specifier_qualifier_list));
# 2368 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'init_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 "C\Ansi\Parser.fsy"
                                                                                
                                 let list = new System.Collections.Generic.List<DeclaratorBase>()
                                 list.Add(_1)
                                 list
                             
                   )
# 380 "C\Ansi\Parser.fsy"
                 : 'init_declarator_list));
# 2383 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'init_declarator_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'init_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 385 "C\Ansi\Parser.fsy"
                                                                               
                                 _1.Add(_3) 
                                 _1
                             
                   )
# 385 "C\Ansi\Parser.fsy"
                 : 'init_declarator_list));
# 2398 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 392 "C\Ansi\Parser.fsy"
                                                                               InitDeclarator(_1, null) :> DeclaratorBase 
                   )
# 392 "C\Ansi\Parser.fsy"
                 : 'init_declarator));
# 2409 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'initializer)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 393 "C\Ansi\Parser.fsy"
                                                                               InitDeclarator(_1, _3) :> DeclaratorBase 
                   )
# 393 "C\Ansi\Parser.fsy"
                 : 'init_declarator));
# 2421 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pointer)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 397 "C\Ansi\Parser.fsy"
                                                                   PointerDeclarator(_1, _2) :> DeclaratorBase 
                   )
# 397 "C\Ansi\Parser.fsy"
                 : 'declarator));
# 2433 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 398 "C\Ansi\Parser.fsy"
                                                                   _1 
                   )
# 398 "C\Ansi\Parser.fsy"
                 : 'declarator));
# 2444 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 403 "C\Ansi\Parser.fsy"
                                                                                                       NameDeclarator(_1) :> DeclaratorBase 
                   )
# 403 "C\Ansi\Parser.fsy"
                 : 'direct_declarator));
# 2455 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 404 "C\Ansi\Parser.fsy"
                                                                                                       _2 
                   )
# 404 "C\Ansi\Parser.fsy"
                 : 'direct_declarator));
# 2466 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 405 "C\Ansi\Parser.fsy"
                                                                                                       ArrayDeclarator(_1, _3) :> DeclaratorBase 
                   )
# 405 "C\Ansi\Parser.fsy"
                 : 'direct_declarator));
# 2478 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 406 "C\Ansi\Parser.fsy"
                                                                                                       ArrayDeclarator(_1, null) :> DeclaratorBase 
                   )
# 406 "C\Ansi\Parser.fsy"
                 : 'direct_declarator));
# 2489 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Parameter_type_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 407 "C\Ansi\Parser.fsy"
                                                                                                       
                                 let (parameters, isVararg) = _3
                                 FunctionDeclarator(_1, parameters, isVararg) :> DeclaratorBase 
                             
                   )
# 407 "C\Ansi\Parser.fsy"
                 : 'direct_declarator));
# 2504 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'identifier_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 411 "C\Ansi\Parser.fsy"
                                                                                                       IdentifierListDeclarator(_1, _3) :> DeclaratorBase 
                   )
# 411 "C\Ansi\Parser.fsy"
                 : 'direct_declarator));
# 2516 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 412 "C\Ansi\Parser.fsy"
                                                                                                       FunctionDeclarator(_1, null, false) :> DeclaratorBase 
                   )
# 412 "C\Ansi\Parser.fsy"
                 : 'direct_declarator));
# 2527 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 416 "C\Ansi\Parser.fsy"
                                                                   Pointer(null, null) 
                   )
# 416 "C\Ansi\Parser.fsy"
                 : 'pointer));
# 2537 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 417 "C\Ansi\Parser.fsy"
                                                                   Pointer(_2, null) 
                   )
# 417 "C\Ansi\Parser.fsy"
                 : 'pointer));
# 2548 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'pointer)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 418 "C\Ansi\Parser.fsy"
                                                                   Pointer(null, _2) 
                   )
# 418 "C\Ansi\Parser.fsy"
                 : 'pointer));
# 2559 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pointer)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 419 "C\Ansi\Parser.fsy"
                                                                   Pointer(_2, _3) 
                   )
# 419 "C\Ansi\Parser.fsy"
                 : 'pointer));
# 2571 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 423 "C\Ansi\Parser.fsy"
                                                                   
                                 let list = new System.Collections.Generic.List<SpecifierBase>()
                                 list.Add(_1)
                                 list
                             
                   )
# 423 "C\Ansi\Parser.fsy"
                 : 'type_qualifier_list));
# 2586 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier_list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'type_qualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 428 "C\Ansi\Parser.fsy"
                                                                  
                                 _1.Add(_2) 
                                 _1
                             
                   )
# 428 "C\Ansi\Parser.fsy"
                 : 'type_qualifier_list));
# 2601 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Parameter_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 434 "C\Ansi\Parser.fsy"
                                                                   (_1, false) 
                   )
# 434 "C\Ansi\Parser.fsy"
                 : 'Parameter_type_list));
# 2612 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Parameter_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 435 "C\Ansi\Parser.fsy"
                                                                   (_1, true) 
                   )
# 435 "C\Ansi\Parser.fsy"
                 : 'Parameter_type_list));
# 2623 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Parameter_declaration)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 439 "C\Ansi\Parser.fsy"
                                                                  
                                 let list = new System.Collections.Generic.List<ParameterBase>()
                                 list.Add(_1)
                                 (list :> System.Collections.Generic.IList<ParameterBase>)
                             
                   )
# 439 "C\Ansi\Parser.fsy"
                 : 'Parameter_list));
# 2638 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Parameter_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Parameter_declaration)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 444 "C\Ansi\Parser.fsy"
                                                                       
                                 _1.Add(_3) 
                                 _1
                             
                   )
# 444 "C\Ansi\Parser.fsy"
                 : 'Parameter_list));
# 2653 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 450 "C\Ansi\Parser.fsy"
                                                                           Parameter(_1, _2) 
                   )
# 450 "C\Ansi\Parser.fsy"
                 : 'Parameter_declaration));
# 2665 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstract_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 451 "C\Ansi\Parser.fsy"
                                                                           Parameter(_1, _2) 
                   )
# 451 "C\Ansi\Parser.fsy"
                 : 'Parameter_declaration));
# 2677 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 452 "C\Ansi\Parser.fsy"
                                                                           Parameter(_1) 
                   )
# 452 "C\Ansi\Parser.fsy"
                 : 'Parameter_declaration));
# 2688 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 456 "C\Ansi\Parser.fsy"
                                                                  
                                 let list = new System.Collections.Generic.List<string>()
                                 list.Add(_1)
                                 list
                             
                   )
# 456 "C\Ansi\Parser.fsy"
                 : 'identifier_list));
# 2703 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identifier_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 461 "C\Ansi\Parser.fsy"
                                                                  
                                 _1.Add(_3) 
                                 _1
                             
                   )
# 461 "C\Ansi\Parser.fsy"
                 : 'identifier_list));
# 2718 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specifier_qualifier_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 468 "C\Ansi\Parser.fsy"
                                                                           TypeName(_1) 
                   )
# 468 "C\Ansi\Parser.fsy"
                 : 'type_name));
# 2729 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Specifier_qualifier_list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstract_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 469 "C\Ansi\Parser.fsy"
                                                                           TypeName(_1, _2) 
                   )
# 469 "C\Ansi\Parser.fsy"
                 : 'type_name));
# 2741 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pointer)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 473 "C\Ansi\Parser.fsy"
                                                                           PointerAbstractDeclarator(_1) :> DeclaratorBase 
                   )
# 473 "C\Ansi\Parser.fsy"
                 : 'abstract_declarator));
# 2752 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_abstract_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 474 "C\Ansi\Parser.fsy"
                                                                           _1 
                   )
# 474 "C\Ansi\Parser.fsy"
                 : 'abstract_declarator));
# 2763 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pointer)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_abstract_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 475 "C\Ansi\Parser.fsy"
                                                                           PointerAbstractDeclarator(_1, _2) :> DeclaratorBase 
                   )
# 475 "C\Ansi\Parser.fsy"
                 : 'abstract_declarator));
# 2775 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstract_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 479 "C\Ansi\Parser.fsy"
                                                                                                   _2 
                   )
# 479 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2786 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 480 "C\Ansi\Parser.fsy"
                                                                                                   ArrayAbstractDeclarator(null, null) :> DeclaratorBase 
                   )
# 480 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2796 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 481 "C\Ansi\Parser.fsy"
                                                                                                   ArrayAbstractDeclarator(null, _2) :> DeclaratorBase 
                   )
# 481 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2807 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_abstract_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 482 "C\Ansi\Parser.fsy"
                                                                                                   ArrayAbstractDeclarator(_1, null) :> DeclaratorBase 
                   )
# 482 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2818 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_abstract_declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 483 "C\Ansi\Parser.fsy"
                                                                                                              ArrayAbstractDeclarator(_1, _3) :> DeclaratorBase 
                   )
# 483 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2830 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 484 "C\Ansi\Parser.fsy"
                                                                                                   FunctionAbstractDeclarator(null, null, false) :> DeclaratorBase 
                   )
# 484 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2840 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Parameter_type_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 485 "C\Ansi\Parser.fsy"
                                                                                                   
                                 let (parameters, isVararg) = _2
                                 FunctionAbstractDeclarator(null, parameters, isVararg) :> DeclaratorBase 
                             
                   )
# 485 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2854 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_abstract_declarator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 489 "C\Ansi\Parser.fsy"
                                                                                                   FunctionAbstractDeclarator(_1, null, false) :> DeclaratorBase 
                   )
# 489 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2865 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'direct_abstract_declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Parameter_type_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 490 "C\Ansi\Parser.fsy"
                                                                                                           
                                 let (parameters, isVararg) = _3
                                 FunctionAbstractDeclarator(_1, parameters, isVararg) :> DeclaratorBase 
                             
                   )
# 490 "C\Ansi\Parser.fsy"
                 : 'direct_abstract_declarator));
# 2880 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'assignment_expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 498 "C\Ansi\Parser.fsy"
                                                                                      SimpleInitializer(_1) :> InitializerBase 
                   )
# 498 "C\Ansi\Parser.fsy"
                 : 'initializer));
# 2891 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'initializer_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 499 "C\Ansi\Parser.fsy"
                                                                                      ArrayInitializer(_2, true) :> InitializerBase 
                   )
# 499 "C\Ansi\Parser.fsy"
                 : 'initializer));
# 2902 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'initializer_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 501 "C\Ansi\Parser.fsy"
                                                                                      ArrayInitializer(_2, false) :> InitializerBase 
                   )
# 501 "C\Ansi\Parser.fsy"
                 : 'initializer));
# 2913 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'initializer)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 505 "C\Ansi\Parser.fsy"
                                                                  
                                 let list = new System.Collections.Generic.List<InitializerBase>()
                                 list.Add(_1)
                                 list
                             
                   )
# 505 "C\Ansi\Parser.fsy"
                 : 'initializer_list));
# 2928 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'initializer_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'initializer)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 510 "C\Ansi\Parser.fsy"
                                                                   
                                 _1.Add(_3) 
                                 _1
                             
                   )
# 510 "C\Ansi\Parser.fsy"
                 : 'initializer_list));
# 2943 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'labeled_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 517 "C\Ansi\Parser.fsy"
                                                                   _1 
                   )
# 517 "C\Ansi\Parser.fsy"
                 : StatementBase));
# 2954 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'compound_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 518 "C\Ansi\Parser.fsy"
                                                                   _1 
                   )
# 518 "C\Ansi\Parser.fsy"
                 : StatementBase));
# 2965 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'expression_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 519 "C\Ansi\Parser.fsy"
                                                                   _1 
                   )
# 519 "C\Ansi\Parser.fsy"
                 : StatementBase));
# 2976 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'selection_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 520 "C\Ansi\Parser.fsy"
                                                                   _1 
                   )
# 520 "C\Ansi\Parser.fsy"
                 : StatementBase));
# 2987 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'iteration_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 521 "C\Ansi\Parser.fsy"
                                                                   _1 
                   )
# 521 "C\Ansi\Parser.fsy"
                 : StatementBase));
# 2998 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'jump_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 "C\Ansi\Parser.fsy"
                                                                   _1 
                   )
# 522 "C\Ansi\Parser.fsy"
                 : StatementBase));
# 3009 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 526 "C\Ansi\Parser.fsy"
                                                                       LabeledStatement(_1, _3) :> StatementBase 
                   )
# 526 "C\Ansi\Parser.fsy"
                 : 'labeled_Statement));
# 3021 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant_expression)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 527 "C\Ansi\Parser.fsy"
                                                                       CaseLabeledStatement(_2, _4) :> StatementBase 
                   )
# 527 "C\Ansi\Parser.fsy"
                 : 'labeled_Statement));
# 3033 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 528 "C\Ansi\Parser.fsy"
                                                                       DefaultLabeledStatement(_3) :> StatementBase 
                   )
# 528 "C\Ansi\Parser.fsy"
                 : 'labeled_Statement));
# 3044 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 532 "C\Ansi\Parser.fsy"
                                                                    CompoundStatement(null, null) :> StatementBase 
                   )
# 532 "C\Ansi\Parser.fsy"
                 : 'compound_Statement));
# 3054 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Statement_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 533 "C\Ansi\Parser.fsy"
                                                                                   CompoundStatement(null, _2) :> StatementBase 
                   )
# 533 "C\Ansi\Parser.fsy"
                 : 'compound_Statement));
# 3065 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 "C\Ansi\Parser.fsy"
                                                                                   CompoundStatement(_2, null) :> StatementBase 
                   )
# 534 "C\Ansi\Parser.fsy"
                 : 'compound_Statement));
# 3076 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Statement_list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 535 "C\Ansi\Parser.fsy"
                                                                                               CompoundStatement(_2, _3) :> StatementBase 
                   )
# 535 "C\Ansi\Parser.fsy"
                 : 'compound_Statement));
# 3088 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 539 "C\Ansi\Parser.fsy"
                                                                      
                                 let list = new System.Collections.Generic.List<StatementBase>()
                                 list.Add(_1)
                                 list
                             
                   )
# 539 "C\Ansi\Parser.fsy"
                 : 'Statement_list));
# 3103 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Statement_list)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 544 "C\Ansi\Parser.fsy"
                                                                      
                                 _1.Add(_2) 
                                 _1
                             
                   )
# 544 "C\Ansi\Parser.fsy"
                 : 'Statement_list));
# 3118 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 550 "C\Ansi\Parser.fsy"
                                                   ExpressionStatement(null) :> StatementBase 
                   )
# 550 "C\Ansi\Parser.fsy"
                 : 'expression_Statement));
# 3128 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 551 "C\Ansi\Parser.fsy"
                                                   ExpressionStatement(_1) :> StatementBase 
                   )
# 551 "C\Ansi\Parser.fsy"
                 : 'expression_Statement));
# 3139 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 555 "C\Ansi\Parser.fsy"
                                                                                       IfStatement(_3, _5, null) :> StatementBase 
                   )
# 555 "C\Ansi\Parser.fsy"
                 : 'selection_Statement));
# 3151 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 556 "C\Ansi\Parser.fsy"
                                                                                                       IfStatement(_3, _5, _7) :> StatementBase 
                   )
# 556 "C\Ansi\Parser.fsy"
                 : 'selection_Statement));
# 3164 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 557 "C\Ansi\Parser.fsy"
                                                                                           SwitchStatement(_3, _5) :> StatementBase 
                   )
# 557 "C\Ansi\Parser.fsy"
                 : 'selection_Statement));
# 3176 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 561 "C\Ansi\Parser.fsy"
                                                                                                       WhileStatement(_3, _5) :> StatementBase 
                   )
# 561 "C\Ansi\Parser.fsy"
                 : 'iteration_Statement));
# 3188 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 562 "C\Ansi\Parser.fsy"
                                                                                                       DoStatement(_5, _2) :> StatementBase 
                   )
# 562 "C\Ansi\Parser.fsy"
                 : 'iteration_Statement));
# 3200 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expression_Statement)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expression_Statement)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 563 "C\Ansi\Parser.fsy"
                                                                                                                           ForStatement(_3, _4, null, _6) :> StatementBase 
                   )
# 563 "C\Ansi\Parser.fsy"
                 : 'iteration_Statement));
# 3213 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expression_Statement)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'expression_Statement)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : StatementBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 564 "C\Ansi\Parser.fsy"
                                                                                                                                   ForStatement(_3, _4, _5, _7) :> StatementBase 
                   )
# 564 "C\Ansi\Parser.fsy"
                 : 'iteration_Statement));
# 3227 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 569 "C\Ansi\Parser.fsy"
                                                           GotoStatement(_2) :> StatementBase 
                   )
# 569 "C\Ansi\Parser.fsy"
                 : 'jump_Statement));
# 3238 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 570 "C\Ansi\Parser.fsy"
                                                           ContinueStatement() :> StatementBase 
                   )
# 570 "C\Ansi\Parser.fsy"
                 : 'jump_Statement));
# 3248 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 571 "C\Ansi\Parser.fsy"
                                                           BreakStatement() :> StatementBase 
                   )
# 571 "C\Ansi\Parser.fsy"
                 : 'jump_Statement));
# 3258 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 572 "C\Ansi\Parser.fsy"
                                                           ReturnStatement(null) :> StatementBase 
                   )
# 572 "C\Ansi\Parser.fsy"
                 : 'jump_Statement));
# 3268 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ExpressionBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "C\Ansi\Parser.fsy"
                                                           ReturnStatement(_2) :> StatementBase 
                   )
# 573 "C\Ansi\Parser.fsy"
                 : 'jump_Statement));
# 3279 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'external_declaration)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 577 "C\Ansi\Parser.fsy"
                                                                                                   
                                 let result = new TranslationUnit()
                                 result.Add(_1)
                                 result
                             
                   )
# 577 "C\Ansi\Parser.fsy"
                 : TranslationUnit));
# 3294 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : TranslationUnit)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'external_declaration)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 582 "C\Ansi\Parser.fsy"
                                                                                                  
                                 _1.Add(_2)
                                 _1
                             
                   )
# 582 "C\Ansi\Parser.fsy"
                 : TranslationUnit));
# 3309 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'function_definition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 589 "C\Ansi\Parser.fsy"
                                                                                                   _1 
                   )
# 589 "C\Ansi\Parser.fsy"
                 : 'external_declaration));
# 3320 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : DeclarationBase)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 590 "C\Ansi\Parser.fsy"
                                                                                                   _1 
                   )
# 590 "C\Ansi\Parser.fsy"
                 : 'external_declaration));
# 3331 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'compound_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 594 "C\Ansi\Parser.fsy"
                                                                                                   FunctionDeclaration(_1, _2, _3, _4) :> DeclarationBase 
                   )
# 594 "C\Ansi\Parser.fsy"
                 : 'function_definition));
# 3345 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_Specifiers)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'compound_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 595 "C\Ansi\Parser.fsy"
                                                                                                   FunctionDeclaration(_1, _2, null, _3) :> DeclarationBase 
                   )
# 595 "C\Ansi\Parser.fsy"
                 : 'function_definition));
# 3358 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'declaration_list)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'compound_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 596 "C\Ansi\Parser.fsy"
                                                                                                   FunctionDeclaration(null, _1, _2, _3) :> DeclarationBase 
                   )
# 596 "C\Ansi\Parser.fsy"
                 : 'function_definition));
# 3371 "C\Ansi\Parser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'declarator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'compound_Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 597 "C\Ansi\Parser.fsy"
                                                                                                   FunctionDeclaration(null, _1, null, _2) :> DeclarationBase 
                   )
# 597 "C\Ansi\Parser.fsy"
                 : 'function_definition));
|]
# 3384 "C\Ansi\Parser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 85;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let declaration lexer lexbuf : DeclarationBase =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let Statement lexer lexbuf : StatementBase =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let expression lexer lexbuf : ExpressionBase =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
let translation_unit lexer lexbuf : TranslationUnit =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 6))
